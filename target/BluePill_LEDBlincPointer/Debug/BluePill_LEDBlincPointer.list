
BluePill_LEDBlincPointer.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000cd0  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000070  08000e00  08000e00  00010e00  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000e70  08000e70  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08000e70  08000e70  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000e70  08000e70  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000e70  08000e70  00010e70  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000e74  08000e74  00010e74  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08000e78  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000002c  20000064  08000edc  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000090  08000edc  00020090  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   000021d1  00000000  00000000  0002008d  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000005a7  00000000  00000000  0002225e  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000110  00000000  00000000  00022808  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 000000d8  00000000  00000000  00022918  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00002adf  00000000  00000000  000229f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   000012be  00000000  00000000  000254cf  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    000090ab  00000000  00000000  0002678d  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0002f838  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000900  00000000  00000000  0002f8b4  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000064 	.word	0x20000064
 800014c:	00000000 	.word	0x00000000
 8000150:	08000de8 	.word	0x08000de8

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000068 	.word	0x20000068
 800016c:	08000de8 	.word	0x08000de8

08000170 <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 8000170:	b580      	push	{r7, lr}
 8000172:	b08c      	sub	sp, #48	; 0x30
 8000174:	af00      	add	r7, sp, #0
0x4001100C 		//PORTC; +0C

*///***************************************

//create pointer for RCC_APB2ENR
uint32_t *pClkCntrlReg	= (uint32_t*)0x40021018;
 8000176:	4b5a      	ldr	r3, [pc, #360]	; (80002e0 <main+0x170>)
 8000178:	627b      	str	r3, [r7, #36]	; 0x24

//create ponter for PortmodeReg
uint32_t *pPortAModeLowReg=		(uint32_t*)0x40010800;
 800017a:	4b5a      	ldr	r3, [pc, #360]	; (80002e4 <main+0x174>)
 800017c:	623b      	str	r3, [r7, #32]
uint32_t *pPortAModeHighReg=	(uint32_t*)0x40010804;
 800017e:	4b5a      	ldr	r3, [pc, #360]	; (80002e8 <main+0x178>)
 8000180:	61fb      	str	r3, [r7, #28]

uint32_t *pPortBModeLowReg=		(uint32_t*)0x40010C00;
 8000182:	4b5a      	ldr	r3, [pc, #360]	; (80002ec <main+0x17c>)
 8000184:	61bb      	str	r3, [r7, #24]
uint32_t *pPortBModeHighReg= 	(uint32_t*)0x40010C04;
 8000186:	4b5a      	ldr	r3, [pc, #360]	; (80002f0 <main+0x180>)
 8000188:	617b      	str	r3, [r7, #20]

//uint32_t *pPortCModeLowReg= 	(uint32_t*)0x40011000; не используется на блюпиле
uint32_t *pPortCModeHighReg= 	(uint32_t*)0x40011004;
 800018a:	4b5a      	ldr	r3, [pc, #360]	; (80002f4 <main+0x184>)
 800018c:	613b      	str	r3, [r7, #16]

//create pointer for OutRegister
uint32_t *pPortAOutReg	= (uint32_t*)0x4001080C;
 800018e:	4b5a      	ldr	r3, [pc, #360]	; (80002f8 <main+0x188>)
 8000190:	60fb      	str	r3, [r7, #12]
uint32_t *pPortBOutReg	= (uint32_t*)0x40010C0C;
 8000192:	4b5a      	ldr	r3, [pc, #360]	; (80002fc <main+0x18c>)
 8000194:	60bb      	str	r3, [r7, #8]
uint32_t *pPortCOutReg	= (uint32_t*)0x4001100C;
 8000196:	4b5a      	ldr	r3, [pc, #360]	; (8000300 <main+0x190>)
 8000198:	607b      	str	r3, [r7, #4]

//Enable Clock for PORT ABC
*pClkCntrlReg |=0x1C;	//eneble PORTA-C;
 800019a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800019c:	681b      	ldr	r3, [r3, #0]
 800019e:	f043 021c 	orr.w	r2, r3, #28
 80001a2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80001a4:	601a      	str	r2, [r3, #0]

//Configure the mode of PORT-----------------------------------------------
//Configure Mode of PORTA
*pPortAModeLowReg	&=0x22222222;	//clear PA0;PA1;PA2;PA3;PA4;PA5;PA6;PA7;
 80001a6:	6a3b      	ldr	r3, [r7, #32]
 80001a8:	681b      	ldr	r3, [r3, #0]
 80001aa:	f003 3222 	and.w	r2, r3, #572662306	; 0x22222222
 80001ae:	6a3b      	ldr	r3, [r7, #32]
 80001b0:	601a      	str	r2, [r3, #0]
*pPortAModeLowReg	|=0x22222222;	//set	PA0;PA1;PA2;PA3;PA4;PA5;PA6;PA7;
 80001b2:	6a3b      	ldr	r3, [r7, #32]
 80001b4:	681b      	ldr	r3, [r3, #0]
 80001b6:	f043 3222 	orr.w	r2, r3, #572662306	; 0x22222222
 80001ba:	6a3b      	ldr	r3, [r7, #32]
 80001bc:	601a      	str	r2, [r3, #0]

*pPortAModeHighReg	&=0x2FF22222;	//clear	PA8;PA9;PA10;PA11;PA12;		PA15.
 80001be:	69fb      	ldr	r3, [r7, #28]
 80001c0:	681a      	ldr	r2, [r3, #0]
 80001c2:	4b50      	ldr	r3, [pc, #320]	; (8000304 <main+0x194>)
 80001c4:	4013      	ands	r3, r2
 80001c6:	69fa      	ldr	r2, [r7, #28]
 80001c8:	6013      	str	r3, [r2, #0]
*pPortAModeHighReg	|=0x20022222;	//set	PA8;PA9;PA10;PA11;PA12;		PA15.
 80001ca:	69fb      	ldr	r3, [r7, #28]
 80001cc:	681a      	ldr	r2, [r3, #0]
 80001ce:	4b4e      	ldr	r3, [pc, #312]	; (8000308 <main+0x198>)
 80001d0:	4313      	orrs	r3, r2
 80001d2:	69fa      	ldr	r2, [r7, #28]
 80001d4:	6013      	str	r3, [r2, #0]

//Configure Mode of PORTB
*pPortBModeLowReg	&=0x22222F22;	//clear	PB1;	PB3;PB4;PB5;PB6;PB7;
 80001d6:	69bb      	ldr	r3, [r7, #24]
 80001d8:	681a      	ldr	r2, [r3, #0]
 80001da:	4b4c      	ldr	r3, [pc, #304]	; (800030c <main+0x19c>)
 80001dc:	4013      	ands	r3, r2
 80001de:	69ba      	ldr	r2, [r7, #24]
 80001e0:	6013      	str	r3, [r2, #0]
*pPortBModeLowReg	|=0x22222F22;	//set	PB1;	PB3;PB4;PB5;PB6;PB7;
 80001e2:	69bb      	ldr	r3, [r7, #24]
 80001e4:	681b      	ldr	r3, [r3, #0]
 80001e6:	f043 3322 	orr.w	r3, r3, #572662306	; 0x22222222
 80001ea:	f443 6350 	orr.w	r3, r3, #3328	; 0xd00
 80001ee:	69ba      	ldr	r2, [r7, #24]
 80001f0:	6013      	str	r3, [r2, #0]

*pPortBModeHighReg	&=0x22222222;	//clear	PB8;PB9;PB10;PB11;PB12;PB13;PB14;PB15.
 80001f2:	697b      	ldr	r3, [r7, #20]
 80001f4:	681b      	ldr	r3, [r3, #0]
 80001f6:	f003 3222 	and.w	r2, r3, #572662306	; 0x22222222
 80001fa:	697b      	ldr	r3, [r7, #20]
 80001fc:	601a      	str	r2, [r3, #0]
*pPortBModeHighReg	|=0x22222222;	//set	PB8;PB9;PB10;PB11;PB12;PB13;PB14;PB15.
 80001fe:	697b      	ldr	r3, [r7, #20]
 8000200:	681b      	ldr	r3, [r3, #0]
 8000202:	f043 3222 	orr.w	r2, r3, #572662306	; 0x22222222
 8000206:	697b      	ldr	r3, [r7, #20]
 8000208:	601a      	str	r2, [r3, #0]

//Configure Mode of PORTC	//no pins on PCB
//*pPortCModeLowReg	&=0x222FFFFF;	//clear
//*pPortCModeLowReg	|=0x22200000;	//set

*pPortCModeHighReg	&=0x222FFFFF;	//clear	PC13;PC14;PC15
 800020a:	693b      	ldr	r3, [r7, #16]
 800020c:	681b      	ldr	r3, [r3, #0]
 800020e:	f023 435d 	bic.w	r3, r3, #3707764736	; 0xdd000000
 8000212:	f423 0350 	bic.w	r3, r3, #13631488	; 0xd00000
 8000216:	693a      	ldr	r2, [r7, #16]
 8000218:	6013      	str	r3, [r2, #0]
*pPortCModeHighReg	|=0x22200000;	//set	PC13;PC14;PC15
 800021a:	693b      	ldr	r3, [r7, #16]
 800021c:	681b      	ldr	r3, [r3, #0]
 800021e:	f043 5308 	orr.w	r3, r3, #570425344	; 0x22000000
 8000222:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8000226:	693a      	ldr	r2, [r7, #16]
 8000228:	6013      	str	r3, [r2, #0]


//Enable LED (Configure PC13 as low)
*pPortCOutReg	&=0xFFFFDFFF;	//set	PC13 as low (enable LED)
 800022a:	687b      	ldr	r3, [r7, #4]
 800022c:	681b      	ldr	r3, [r3, #0]
 800022e:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 8000232:	687b      	ldr	r3, [r7, #4]
 8000234:	601a      	str	r2, [r3, #0]
*pPortCOutReg	|=0x2000;		//set	PC13 as high (disable LED)
 8000236:	687b      	ldr	r3, [r7, #4]
 8000238:	681b      	ldr	r3, [r3, #0]
 800023a:	f443 5200 	orr.w	r2, r3, #8192	; 0x2000
 800023e:	687b      	ldr	r3, [r7, #4]
 8000240:	601a      	str	r2, [r3, #0]


//**************************************************************
//PORTA; Configure PA0;PA1;PA2;PA3;PA4;PA5;PA6;PA7;PA8;PA9;PA10;PA11;PA12		PA15; as HIGH
*pPortAOutReg |=0x9FFF;
 8000242:	68fb      	ldr	r3, [r7, #12]
 8000244:	681b      	ldr	r3, [r3, #0]
 8000246:	f443 431f 	orr.w	r3, r3, #40704	; 0x9f00
 800024a:	f043 03ff 	orr.w	r3, r3, #255	; 0xff
 800024e:	68fa      	ldr	r2, [r7, #12]
 8000250:	6013      	str	r3, [r2, #0]
//PORTA; Configure  PA0;PA1;PA2;PA3;PA4;PA5;PA6;PA7;PA8;PA9;PA10;PA11;PA12		PA15; as LOW
*pPortAOutReg &=0x6000;
 8000252:	68fb      	ldr	r3, [r7, #12]
 8000254:	681b      	ldr	r3, [r3, #0]
 8000256:	f403 42c0 	and.w	r2, r3, #24576	; 0x6000
 800025a:	68fb      	ldr	r3, [r7, #12]
 800025c:	601a      	str	r2, [r3, #0]

//PORTB; PB1; Configure	PB3;PB4;PB5;PB6;PB7;PB8;PB9;PB10;PB11;PB12;PB13;PB14;PB15  as HIGH
*pPortBOutReg |=0xFFF8;
 800025e:	68bb      	ldr	r3, [r7, #8]
 8000260:	681b      	ldr	r3, [r3, #0]
 8000262:	f443 437f 	orr.w	r3, r3, #65280	; 0xff00
 8000266:	f043 03f8 	orr.w	r3, r3, #248	; 0xf8
 800026a:	68ba      	ldr	r2, [r7, #8]
 800026c:	6013      	str	r3, [r2, #0]
//PORTB; Configure PB3;PB4;PB5;PB6;PB7;PB8;PB9;PB10;PB11;PB12;PB13;PB14;PB15 as LOW
*pPortBOutReg &=0x0007;
 800026e:	68bb      	ldr	r3, [r7, #8]
 8000270:	681b      	ldr	r3, [r3, #0]
 8000272:	f003 0207 	and.w	r2, r3, #7
 8000276:	68bb      	ldr	r3, [r7, #8]
 8000278:	601a      	str	r2, [r3, #0]

//PORTC; Configure as HIGH PC13;PC14;PC15
*pPortCOutReg |=0xE000;
 800027a:	687b      	ldr	r3, [r7, #4]
 800027c:	681b      	ldr	r3, [r3, #0]
 800027e:	f443 4260 	orr.w	r2, r3, #57344	; 0xe000
 8000282:	687b      	ldr	r3, [r7, #4]
 8000284:	601a      	str	r2, [r3, #0]
//PORTC; Configure as LOW PC13;PC14;PC15
*pPortCOutReg &=0x1FFF;
 8000286:	687b      	ldr	r3, [r7, #4]
 8000288:	681b      	ldr	r3, [r3, #0]
 800028a:	f3c3 020c 	ubfx	r2, r3, #0, #13
 800028e:	687b      	ldr	r3, [r7, #4]
 8000290:	601a      	str	r2, [r3, #0]
//*************************************************************************
	initialise_monitor_handles();
 8000292:	f000 f841 	bl	8000318 <initialise_monitor_handles>
	printf("Hello World\n");
 8000296:	481e      	ldr	r0, [pc, #120]	; (8000310 <main+0x1a0>)
 8000298:	f000 f99c 	bl	80005d4 <puts>
	/* Loop forever */
while(1){
//turn ONN the LED
	*pPortCOutReg	&=0xFFFFDFFF;	//set	PC13 as low (enable LED)
 800029c:	687b      	ldr	r3, [r7, #4]
 800029e:	681b      	ldr	r3, [r3, #0]
 80002a0:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 80002a4:	687b      	ldr	r3, [r7, #4]
 80002a6:	601a      	str	r2, [r3, #0]
	for(uint32_t i=0; i<100000; i++);
 80002a8:	2300      	movs	r3, #0
 80002aa:	62fb      	str	r3, [r7, #44]	; 0x2c
 80002ac:	e002      	b.n	80002b4 <main+0x144>
 80002ae:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80002b0:	3301      	adds	r3, #1
 80002b2:	62fb      	str	r3, [r7, #44]	; 0x2c
 80002b4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80002b6:	4a17      	ldr	r2, [pc, #92]	; (8000314 <main+0x1a4>)
 80002b8:	4293      	cmp	r3, r2
 80002ba:	d9f8      	bls.n	80002ae <main+0x13e>
//turn OFF LED
	*pPortCOutReg	|=0x2000;		//set	PC13 as high (disable LED)
 80002bc:	687b      	ldr	r3, [r7, #4]
 80002be:	681b      	ldr	r3, [r3, #0]
 80002c0:	f443 5200 	orr.w	r2, r3, #8192	; 0x2000
 80002c4:	687b      	ldr	r3, [r7, #4]
 80002c6:	601a      	str	r2, [r3, #0]
	for(uint32_t i=0; i<100000; i++);
 80002c8:	2300      	movs	r3, #0
 80002ca:	62bb      	str	r3, [r7, #40]	; 0x28
 80002cc:	e002      	b.n	80002d4 <main+0x164>
 80002ce:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80002d0:	3301      	adds	r3, #1
 80002d2:	62bb      	str	r3, [r7, #40]	; 0x28
 80002d4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80002d6:	4a0f      	ldr	r2, [pc, #60]	; (8000314 <main+0x1a4>)
 80002d8:	4293      	cmp	r3, r2
 80002da:	d9f8      	bls.n	80002ce <main+0x15e>
	*pPortCOutReg	&=0xFFFFDFFF;	//set	PC13 as low (enable LED)
 80002dc:	e7de      	b.n	800029c <main+0x12c>
 80002de:	bf00      	nop
 80002e0:	40021018 	.word	0x40021018
 80002e4:	40010800 	.word	0x40010800
 80002e8:	40010804 	.word	0x40010804
 80002ec:	40010c00 	.word	0x40010c00
 80002f0:	40010c04 	.word	0x40010c04
 80002f4:	40011004 	.word	0x40011004
 80002f8:	4001080c 	.word	0x4001080c
 80002fc:	40010c0c 	.word	0x40010c0c
 8000300:	4001100c 	.word	0x4001100c
 8000304:	2ff22222 	.word	0x2ff22222
 8000308:	20022222 	.word	0x20022222
 800030c:	22222f22 	.word	0x22222f22
 8000310:	08000e00 	.word	0x08000e00
 8000314:	0001869f 	.word	0x0001869f

08000318 <initialise_monitor_handles>:
char **environ = __env;


/* Functions */
void initialise_monitor_handles()
{
 8000318:	b480      	push	{r7}
 800031a:	af00      	add	r7, sp, #0
}
 800031c:	bf00      	nop
 800031e:	46bd      	mov	sp, r7
 8000320:	bc80      	pop	{r7}
 8000322:	4770      	bx	lr

08000324 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000324:	b580      	push	{r7, lr}
 8000326:	b086      	sub	sp, #24
 8000328:	af00      	add	r7, sp, #0
 800032a:	60f8      	str	r0, [r7, #12]
 800032c:	60b9      	str	r1, [r7, #8]
 800032e:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000330:	2300      	movs	r3, #0
 8000332:	617b      	str	r3, [r7, #20]
 8000334:	e00a      	b.n	800034c <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8000336:	f3af 8000 	nop.w
 800033a:	4601      	mov	r1, r0
 800033c:	68bb      	ldr	r3, [r7, #8]
 800033e:	1c5a      	adds	r2, r3, #1
 8000340:	60ba      	str	r2, [r7, #8]
 8000342:	b2ca      	uxtb	r2, r1
 8000344:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000346:	697b      	ldr	r3, [r7, #20]
 8000348:	3301      	adds	r3, #1
 800034a:	617b      	str	r3, [r7, #20]
 800034c:	697a      	ldr	r2, [r7, #20]
 800034e:	687b      	ldr	r3, [r7, #4]
 8000350:	429a      	cmp	r2, r3
 8000352:	dbf0      	blt.n	8000336 <_read+0x12>
	}

return len;
 8000354:	687b      	ldr	r3, [r7, #4]
}
 8000356:	4618      	mov	r0, r3
 8000358:	3718      	adds	r7, #24
 800035a:	46bd      	mov	sp, r7
 800035c:	bd80      	pop	{r7, pc}

0800035e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800035e:	b580      	push	{r7, lr}
 8000360:	b086      	sub	sp, #24
 8000362:	af00      	add	r7, sp, #0
 8000364:	60f8      	str	r0, [r7, #12]
 8000366:	60b9      	str	r1, [r7, #8]
 8000368:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800036a:	2300      	movs	r3, #0
 800036c:	617b      	str	r3, [r7, #20]
 800036e:	e009      	b.n	8000384 <_write+0x26>
	{
		__io_putchar(*ptr++);
 8000370:	68bb      	ldr	r3, [r7, #8]
 8000372:	1c5a      	adds	r2, r3, #1
 8000374:	60ba      	str	r2, [r7, #8]
 8000376:	781b      	ldrb	r3, [r3, #0]
 8000378:	4618      	mov	r0, r3
 800037a:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800037e:	697b      	ldr	r3, [r7, #20]
 8000380:	3301      	adds	r3, #1
 8000382:	617b      	str	r3, [r7, #20]
 8000384:	697a      	ldr	r2, [r7, #20]
 8000386:	687b      	ldr	r3, [r7, #4]
 8000388:	429a      	cmp	r2, r3
 800038a:	dbf1      	blt.n	8000370 <_write+0x12>
	}
	return len;
 800038c:	687b      	ldr	r3, [r7, #4]
}
 800038e:	4618      	mov	r0, r3
 8000390:	3718      	adds	r7, #24
 8000392:	46bd      	mov	sp, r7
 8000394:	bd80      	pop	{r7, pc}

08000396 <_close>:

int _close(int file)
{
 8000396:	b480      	push	{r7}
 8000398:	b083      	sub	sp, #12
 800039a:	af00      	add	r7, sp, #0
 800039c:	6078      	str	r0, [r7, #4]
	return -1;
 800039e:	f04f 33ff 	mov.w	r3, #4294967295
}
 80003a2:	4618      	mov	r0, r3
 80003a4:	370c      	adds	r7, #12
 80003a6:	46bd      	mov	sp, r7
 80003a8:	bc80      	pop	{r7}
 80003aa:	4770      	bx	lr

080003ac <_fstat>:


int _fstat(int file, struct stat *st)
{
 80003ac:	b480      	push	{r7}
 80003ae:	b083      	sub	sp, #12
 80003b0:	af00      	add	r7, sp, #0
 80003b2:	6078      	str	r0, [r7, #4]
 80003b4:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80003b6:	683b      	ldr	r3, [r7, #0]
 80003b8:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80003bc:	605a      	str	r2, [r3, #4]
	return 0;
 80003be:	2300      	movs	r3, #0
}
 80003c0:	4618      	mov	r0, r3
 80003c2:	370c      	adds	r7, #12
 80003c4:	46bd      	mov	sp, r7
 80003c6:	bc80      	pop	{r7}
 80003c8:	4770      	bx	lr

080003ca <_isatty>:

int _isatty(int file)
{
 80003ca:	b480      	push	{r7}
 80003cc:	b083      	sub	sp, #12
 80003ce:	af00      	add	r7, sp, #0
 80003d0:	6078      	str	r0, [r7, #4]
	return 1;
 80003d2:	2301      	movs	r3, #1
}
 80003d4:	4618      	mov	r0, r3
 80003d6:	370c      	adds	r7, #12
 80003d8:	46bd      	mov	sp, r7
 80003da:	bc80      	pop	{r7}
 80003dc:	4770      	bx	lr

080003de <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80003de:	b480      	push	{r7}
 80003e0:	b085      	sub	sp, #20
 80003e2:	af00      	add	r7, sp, #0
 80003e4:	60f8      	str	r0, [r7, #12]
 80003e6:	60b9      	str	r1, [r7, #8]
 80003e8:	607a      	str	r2, [r7, #4]
	return 0;
 80003ea:	2300      	movs	r3, #0
}
 80003ec:	4618      	mov	r0, r3
 80003ee:	3714      	adds	r7, #20
 80003f0:	46bd      	mov	sp, r7
 80003f2:	bc80      	pop	{r7}
 80003f4:	4770      	bx	lr
	...

080003f8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80003f8:	b580      	push	{r7, lr}
 80003fa:	b086      	sub	sp, #24
 80003fc:	af00      	add	r7, sp, #0
 80003fe:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000400:	4a14      	ldr	r2, [pc, #80]	; (8000454 <_sbrk+0x5c>)
 8000402:	4b15      	ldr	r3, [pc, #84]	; (8000458 <_sbrk+0x60>)
 8000404:	1ad3      	subs	r3, r2, r3
 8000406:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000408:	697b      	ldr	r3, [r7, #20]
 800040a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800040c:	4b13      	ldr	r3, [pc, #76]	; (800045c <_sbrk+0x64>)
 800040e:	681b      	ldr	r3, [r3, #0]
 8000410:	2b00      	cmp	r3, #0
 8000412:	d102      	bne.n	800041a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000414:	4b11      	ldr	r3, [pc, #68]	; (800045c <_sbrk+0x64>)
 8000416:	4a12      	ldr	r2, [pc, #72]	; (8000460 <_sbrk+0x68>)
 8000418:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800041a:	4b10      	ldr	r3, [pc, #64]	; (800045c <_sbrk+0x64>)
 800041c:	681a      	ldr	r2, [r3, #0]
 800041e:	687b      	ldr	r3, [r7, #4]
 8000420:	4413      	add	r3, r2
 8000422:	693a      	ldr	r2, [r7, #16]
 8000424:	429a      	cmp	r2, r3
 8000426:	d207      	bcs.n	8000438 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000428:	f000 f846 	bl	80004b8 <__errno>
 800042c:	4602      	mov	r2, r0
 800042e:	230c      	movs	r3, #12
 8000430:	6013      	str	r3, [r2, #0]
    return (void *)-1;
 8000432:	f04f 33ff 	mov.w	r3, #4294967295
 8000436:	e009      	b.n	800044c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000438:	4b08      	ldr	r3, [pc, #32]	; (800045c <_sbrk+0x64>)
 800043a:	681b      	ldr	r3, [r3, #0]
 800043c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800043e:	4b07      	ldr	r3, [pc, #28]	; (800045c <_sbrk+0x64>)
 8000440:	681a      	ldr	r2, [r3, #0]
 8000442:	687b      	ldr	r3, [r7, #4]
 8000444:	4413      	add	r3, r2
 8000446:	4a05      	ldr	r2, [pc, #20]	; (800045c <_sbrk+0x64>)
 8000448:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800044a:	68fb      	ldr	r3, [r7, #12]
}
 800044c:	4618      	mov	r0, r3
 800044e:	3718      	adds	r7, #24
 8000450:	46bd      	mov	sp, r7
 8000452:	bd80      	pop	{r7, pc}
 8000454:	20005000 	.word	0x20005000
 8000458:	00000400 	.word	0x00000400
 800045c:	20000080 	.word	0x20000080
 8000460:	20000090 	.word	0x20000090

08000464 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000464:	480d      	ldr	r0, [pc, #52]	; (800049c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000466:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000468:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800046c:	480c      	ldr	r0, [pc, #48]	; (80004a0 <LoopForever+0x6>)
  ldr r1, =_edata
 800046e:	490d      	ldr	r1, [pc, #52]	; (80004a4 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000470:	4a0d      	ldr	r2, [pc, #52]	; (80004a8 <LoopForever+0xe>)
  movs r3, #0
 8000472:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000474:	e002      	b.n	800047c <LoopCopyDataInit>

08000476 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000476:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000478:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800047a:	3304      	adds	r3, #4

0800047c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800047c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800047e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000480:	d3f9      	bcc.n	8000476 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000482:	4a0a      	ldr	r2, [pc, #40]	; (80004ac <LoopForever+0x12>)
  ldr r4, =_ebss
 8000484:	4c0a      	ldr	r4, [pc, #40]	; (80004b0 <LoopForever+0x16>)
  movs r3, #0
 8000486:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000488:	e001      	b.n	800048e <LoopFillZerobss>

0800048a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800048a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800048c:	3204      	adds	r2, #4

0800048e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800048e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000490:	d3fb      	bcc.n	800048a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000492:	f000 f817 	bl	80004c4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000496:	f7ff fe6b 	bl	8000170 <main>

0800049a <LoopForever>:

LoopForever:
    b LoopForever
 800049a:	e7fe      	b.n	800049a <LoopForever>
  ldr   r0, =_estack
 800049c:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 80004a0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80004a4:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 80004a8:	08000e78 	.word	0x08000e78
  ldr r2, =_sbss
 80004ac:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 80004b0:	20000090 	.word	0x20000090

080004b4 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80004b4:	e7fe      	b.n	80004b4 <ADC1_2_IRQHandler>
	...

080004b8 <__errno>:
 80004b8:	4b01      	ldr	r3, [pc, #4]	; (80004c0 <__errno+0x8>)
 80004ba:	6818      	ldr	r0, [r3, #0]
 80004bc:	4770      	bx	lr
 80004be:	bf00      	nop
 80004c0:	20000000 	.word	0x20000000

080004c4 <__libc_init_array>:
 80004c4:	b570      	push	{r4, r5, r6, lr}
 80004c6:	2500      	movs	r5, #0
 80004c8:	4e0c      	ldr	r6, [pc, #48]	; (80004fc <__libc_init_array+0x38>)
 80004ca:	4c0d      	ldr	r4, [pc, #52]	; (8000500 <__libc_init_array+0x3c>)
 80004cc:	1ba4      	subs	r4, r4, r6
 80004ce:	10a4      	asrs	r4, r4, #2
 80004d0:	42a5      	cmp	r5, r4
 80004d2:	d109      	bne.n	80004e8 <__libc_init_array+0x24>
 80004d4:	f000 fc88 	bl	8000de8 <_init>
 80004d8:	2500      	movs	r5, #0
 80004da:	4e0a      	ldr	r6, [pc, #40]	; (8000504 <__libc_init_array+0x40>)
 80004dc:	4c0a      	ldr	r4, [pc, #40]	; (8000508 <__libc_init_array+0x44>)
 80004de:	1ba4      	subs	r4, r4, r6
 80004e0:	10a4      	asrs	r4, r4, #2
 80004e2:	42a5      	cmp	r5, r4
 80004e4:	d105      	bne.n	80004f2 <__libc_init_array+0x2e>
 80004e6:	bd70      	pop	{r4, r5, r6, pc}
 80004e8:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80004ec:	4798      	blx	r3
 80004ee:	3501      	adds	r5, #1
 80004f0:	e7ee      	b.n	80004d0 <__libc_init_array+0xc>
 80004f2:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80004f6:	4798      	blx	r3
 80004f8:	3501      	adds	r5, #1
 80004fa:	e7f2      	b.n	80004e2 <__libc_init_array+0x1e>
 80004fc:	08000e70 	.word	0x08000e70
 8000500:	08000e70 	.word	0x08000e70
 8000504:	08000e70 	.word	0x08000e70
 8000508:	08000e74 	.word	0x08000e74

0800050c <memset>:
 800050c:	4603      	mov	r3, r0
 800050e:	4402      	add	r2, r0
 8000510:	4293      	cmp	r3, r2
 8000512:	d100      	bne.n	8000516 <memset+0xa>
 8000514:	4770      	bx	lr
 8000516:	f803 1b01 	strb.w	r1, [r3], #1
 800051a:	e7f9      	b.n	8000510 <memset+0x4>

0800051c <_puts_r>:
 800051c:	b570      	push	{r4, r5, r6, lr}
 800051e:	460e      	mov	r6, r1
 8000520:	4605      	mov	r5, r0
 8000522:	b118      	cbz	r0, 800052c <_puts_r+0x10>
 8000524:	6983      	ldr	r3, [r0, #24]
 8000526:	b90b      	cbnz	r3, 800052c <_puts_r+0x10>
 8000528:	f000 fa0c 	bl	8000944 <__sinit>
 800052c:	69ab      	ldr	r3, [r5, #24]
 800052e:	68ac      	ldr	r4, [r5, #8]
 8000530:	b913      	cbnz	r3, 8000538 <_puts_r+0x1c>
 8000532:	4628      	mov	r0, r5
 8000534:	f000 fa06 	bl	8000944 <__sinit>
 8000538:	4b23      	ldr	r3, [pc, #140]	; (80005c8 <_puts_r+0xac>)
 800053a:	429c      	cmp	r4, r3
 800053c:	d117      	bne.n	800056e <_puts_r+0x52>
 800053e:	686c      	ldr	r4, [r5, #4]
 8000540:	89a3      	ldrh	r3, [r4, #12]
 8000542:	071b      	lsls	r3, r3, #28
 8000544:	d51d      	bpl.n	8000582 <_puts_r+0x66>
 8000546:	6923      	ldr	r3, [r4, #16]
 8000548:	b1db      	cbz	r3, 8000582 <_puts_r+0x66>
 800054a:	3e01      	subs	r6, #1
 800054c:	68a3      	ldr	r3, [r4, #8]
 800054e:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000552:	3b01      	subs	r3, #1
 8000554:	60a3      	str	r3, [r4, #8]
 8000556:	b9e9      	cbnz	r1, 8000594 <_puts_r+0x78>
 8000558:	2b00      	cmp	r3, #0
 800055a:	da2e      	bge.n	80005ba <_puts_r+0x9e>
 800055c:	4622      	mov	r2, r4
 800055e:	210a      	movs	r1, #10
 8000560:	4628      	mov	r0, r5
 8000562:	f000 f83f 	bl	80005e4 <__swbuf_r>
 8000566:	3001      	adds	r0, #1
 8000568:	d011      	beq.n	800058e <_puts_r+0x72>
 800056a:	200a      	movs	r0, #10
 800056c:	e011      	b.n	8000592 <_puts_r+0x76>
 800056e:	4b17      	ldr	r3, [pc, #92]	; (80005cc <_puts_r+0xb0>)
 8000570:	429c      	cmp	r4, r3
 8000572:	d101      	bne.n	8000578 <_puts_r+0x5c>
 8000574:	68ac      	ldr	r4, [r5, #8]
 8000576:	e7e3      	b.n	8000540 <_puts_r+0x24>
 8000578:	4b15      	ldr	r3, [pc, #84]	; (80005d0 <_puts_r+0xb4>)
 800057a:	429c      	cmp	r4, r3
 800057c:	bf08      	it	eq
 800057e:	68ec      	ldreq	r4, [r5, #12]
 8000580:	e7de      	b.n	8000540 <_puts_r+0x24>
 8000582:	4621      	mov	r1, r4
 8000584:	4628      	mov	r0, r5
 8000586:	f000 f87f 	bl	8000688 <__swsetup_r>
 800058a:	2800      	cmp	r0, #0
 800058c:	d0dd      	beq.n	800054a <_puts_r+0x2e>
 800058e:	f04f 30ff 	mov.w	r0, #4294967295
 8000592:	bd70      	pop	{r4, r5, r6, pc}
 8000594:	2b00      	cmp	r3, #0
 8000596:	da04      	bge.n	80005a2 <_puts_r+0x86>
 8000598:	69a2      	ldr	r2, [r4, #24]
 800059a:	429a      	cmp	r2, r3
 800059c:	dc06      	bgt.n	80005ac <_puts_r+0x90>
 800059e:	290a      	cmp	r1, #10
 80005a0:	d004      	beq.n	80005ac <_puts_r+0x90>
 80005a2:	6823      	ldr	r3, [r4, #0]
 80005a4:	1c5a      	adds	r2, r3, #1
 80005a6:	6022      	str	r2, [r4, #0]
 80005a8:	7019      	strb	r1, [r3, #0]
 80005aa:	e7cf      	b.n	800054c <_puts_r+0x30>
 80005ac:	4622      	mov	r2, r4
 80005ae:	4628      	mov	r0, r5
 80005b0:	f000 f818 	bl	80005e4 <__swbuf_r>
 80005b4:	3001      	adds	r0, #1
 80005b6:	d1c9      	bne.n	800054c <_puts_r+0x30>
 80005b8:	e7e9      	b.n	800058e <_puts_r+0x72>
 80005ba:	200a      	movs	r0, #10
 80005bc:	6823      	ldr	r3, [r4, #0]
 80005be:	1c5a      	adds	r2, r3, #1
 80005c0:	6022      	str	r2, [r4, #0]
 80005c2:	7018      	strb	r0, [r3, #0]
 80005c4:	e7e5      	b.n	8000592 <_puts_r+0x76>
 80005c6:	bf00      	nop
 80005c8:	08000e30 	.word	0x08000e30
 80005cc:	08000e50 	.word	0x08000e50
 80005d0:	08000e10 	.word	0x08000e10

080005d4 <puts>:
 80005d4:	4b02      	ldr	r3, [pc, #8]	; (80005e0 <puts+0xc>)
 80005d6:	4601      	mov	r1, r0
 80005d8:	6818      	ldr	r0, [r3, #0]
 80005da:	f7ff bf9f 	b.w	800051c <_puts_r>
 80005de:	bf00      	nop
 80005e0:	20000000 	.word	0x20000000

080005e4 <__swbuf_r>:
 80005e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80005e6:	460e      	mov	r6, r1
 80005e8:	4614      	mov	r4, r2
 80005ea:	4605      	mov	r5, r0
 80005ec:	b118      	cbz	r0, 80005f6 <__swbuf_r+0x12>
 80005ee:	6983      	ldr	r3, [r0, #24]
 80005f0:	b90b      	cbnz	r3, 80005f6 <__swbuf_r+0x12>
 80005f2:	f000 f9a7 	bl	8000944 <__sinit>
 80005f6:	4b21      	ldr	r3, [pc, #132]	; (800067c <__swbuf_r+0x98>)
 80005f8:	429c      	cmp	r4, r3
 80005fa:	d12a      	bne.n	8000652 <__swbuf_r+0x6e>
 80005fc:	686c      	ldr	r4, [r5, #4]
 80005fe:	69a3      	ldr	r3, [r4, #24]
 8000600:	60a3      	str	r3, [r4, #8]
 8000602:	89a3      	ldrh	r3, [r4, #12]
 8000604:	071a      	lsls	r2, r3, #28
 8000606:	d52e      	bpl.n	8000666 <__swbuf_r+0x82>
 8000608:	6923      	ldr	r3, [r4, #16]
 800060a:	b363      	cbz	r3, 8000666 <__swbuf_r+0x82>
 800060c:	6923      	ldr	r3, [r4, #16]
 800060e:	6820      	ldr	r0, [r4, #0]
 8000610:	b2f6      	uxtb	r6, r6
 8000612:	1ac0      	subs	r0, r0, r3
 8000614:	6963      	ldr	r3, [r4, #20]
 8000616:	4637      	mov	r7, r6
 8000618:	4283      	cmp	r3, r0
 800061a:	dc04      	bgt.n	8000626 <__swbuf_r+0x42>
 800061c:	4621      	mov	r1, r4
 800061e:	4628      	mov	r0, r5
 8000620:	f000 f926 	bl	8000870 <_fflush_r>
 8000624:	bb28      	cbnz	r0, 8000672 <__swbuf_r+0x8e>
 8000626:	68a3      	ldr	r3, [r4, #8]
 8000628:	3001      	adds	r0, #1
 800062a:	3b01      	subs	r3, #1
 800062c:	60a3      	str	r3, [r4, #8]
 800062e:	6823      	ldr	r3, [r4, #0]
 8000630:	1c5a      	adds	r2, r3, #1
 8000632:	6022      	str	r2, [r4, #0]
 8000634:	701e      	strb	r6, [r3, #0]
 8000636:	6963      	ldr	r3, [r4, #20]
 8000638:	4283      	cmp	r3, r0
 800063a:	d004      	beq.n	8000646 <__swbuf_r+0x62>
 800063c:	89a3      	ldrh	r3, [r4, #12]
 800063e:	07db      	lsls	r3, r3, #31
 8000640:	d519      	bpl.n	8000676 <__swbuf_r+0x92>
 8000642:	2e0a      	cmp	r6, #10
 8000644:	d117      	bne.n	8000676 <__swbuf_r+0x92>
 8000646:	4621      	mov	r1, r4
 8000648:	4628      	mov	r0, r5
 800064a:	f000 f911 	bl	8000870 <_fflush_r>
 800064e:	b190      	cbz	r0, 8000676 <__swbuf_r+0x92>
 8000650:	e00f      	b.n	8000672 <__swbuf_r+0x8e>
 8000652:	4b0b      	ldr	r3, [pc, #44]	; (8000680 <__swbuf_r+0x9c>)
 8000654:	429c      	cmp	r4, r3
 8000656:	d101      	bne.n	800065c <__swbuf_r+0x78>
 8000658:	68ac      	ldr	r4, [r5, #8]
 800065a:	e7d0      	b.n	80005fe <__swbuf_r+0x1a>
 800065c:	4b09      	ldr	r3, [pc, #36]	; (8000684 <__swbuf_r+0xa0>)
 800065e:	429c      	cmp	r4, r3
 8000660:	bf08      	it	eq
 8000662:	68ec      	ldreq	r4, [r5, #12]
 8000664:	e7cb      	b.n	80005fe <__swbuf_r+0x1a>
 8000666:	4621      	mov	r1, r4
 8000668:	4628      	mov	r0, r5
 800066a:	f000 f80d 	bl	8000688 <__swsetup_r>
 800066e:	2800      	cmp	r0, #0
 8000670:	d0cc      	beq.n	800060c <__swbuf_r+0x28>
 8000672:	f04f 37ff 	mov.w	r7, #4294967295
 8000676:	4638      	mov	r0, r7
 8000678:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800067a:	bf00      	nop
 800067c:	08000e30 	.word	0x08000e30
 8000680:	08000e50 	.word	0x08000e50
 8000684:	08000e10 	.word	0x08000e10

08000688 <__swsetup_r>:
 8000688:	4b32      	ldr	r3, [pc, #200]	; (8000754 <__swsetup_r+0xcc>)
 800068a:	b570      	push	{r4, r5, r6, lr}
 800068c:	681d      	ldr	r5, [r3, #0]
 800068e:	4606      	mov	r6, r0
 8000690:	460c      	mov	r4, r1
 8000692:	b125      	cbz	r5, 800069e <__swsetup_r+0x16>
 8000694:	69ab      	ldr	r3, [r5, #24]
 8000696:	b913      	cbnz	r3, 800069e <__swsetup_r+0x16>
 8000698:	4628      	mov	r0, r5
 800069a:	f000 f953 	bl	8000944 <__sinit>
 800069e:	4b2e      	ldr	r3, [pc, #184]	; (8000758 <__swsetup_r+0xd0>)
 80006a0:	429c      	cmp	r4, r3
 80006a2:	d10f      	bne.n	80006c4 <__swsetup_r+0x3c>
 80006a4:	686c      	ldr	r4, [r5, #4]
 80006a6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80006aa:	b29a      	uxth	r2, r3
 80006ac:	0715      	lsls	r5, r2, #28
 80006ae:	d42c      	bmi.n	800070a <__swsetup_r+0x82>
 80006b0:	06d0      	lsls	r0, r2, #27
 80006b2:	d411      	bmi.n	80006d8 <__swsetup_r+0x50>
 80006b4:	2209      	movs	r2, #9
 80006b6:	6032      	str	r2, [r6, #0]
 80006b8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80006bc:	81a3      	strh	r3, [r4, #12]
 80006be:	f04f 30ff 	mov.w	r0, #4294967295
 80006c2:	e03e      	b.n	8000742 <__swsetup_r+0xba>
 80006c4:	4b25      	ldr	r3, [pc, #148]	; (800075c <__swsetup_r+0xd4>)
 80006c6:	429c      	cmp	r4, r3
 80006c8:	d101      	bne.n	80006ce <__swsetup_r+0x46>
 80006ca:	68ac      	ldr	r4, [r5, #8]
 80006cc:	e7eb      	b.n	80006a6 <__swsetup_r+0x1e>
 80006ce:	4b24      	ldr	r3, [pc, #144]	; (8000760 <__swsetup_r+0xd8>)
 80006d0:	429c      	cmp	r4, r3
 80006d2:	bf08      	it	eq
 80006d4:	68ec      	ldreq	r4, [r5, #12]
 80006d6:	e7e6      	b.n	80006a6 <__swsetup_r+0x1e>
 80006d8:	0751      	lsls	r1, r2, #29
 80006da:	d512      	bpl.n	8000702 <__swsetup_r+0x7a>
 80006dc:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80006de:	b141      	cbz	r1, 80006f2 <__swsetup_r+0x6a>
 80006e0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80006e4:	4299      	cmp	r1, r3
 80006e6:	d002      	beq.n	80006ee <__swsetup_r+0x66>
 80006e8:	4630      	mov	r0, r6
 80006ea:	f000 fa19 	bl	8000b20 <_free_r>
 80006ee:	2300      	movs	r3, #0
 80006f0:	6363      	str	r3, [r4, #52]	; 0x34
 80006f2:	89a3      	ldrh	r3, [r4, #12]
 80006f4:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80006f8:	81a3      	strh	r3, [r4, #12]
 80006fa:	2300      	movs	r3, #0
 80006fc:	6063      	str	r3, [r4, #4]
 80006fe:	6923      	ldr	r3, [r4, #16]
 8000700:	6023      	str	r3, [r4, #0]
 8000702:	89a3      	ldrh	r3, [r4, #12]
 8000704:	f043 0308 	orr.w	r3, r3, #8
 8000708:	81a3      	strh	r3, [r4, #12]
 800070a:	6923      	ldr	r3, [r4, #16]
 800070c:	b94b      	cbnz	r3, 8000722 <__swsetup_r+0x9a>
 800070e:	89a3      	ldrh	r3, [r4, #12]
 8000710:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000714:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000718:	d003      	beq.n	8000722 <__swsetup_r+0x9a>
 800071a:	4621      	mov	r1, r4
 800071c:	4630      	mov	r0, r6
 800071e:	f000 f9bf 	bl	8000aa0 <__smakebuf_r>
 8000722:	89a2      	ldrh	r2, [r4, #12]
 8000724:	f012 0301 	ands.w	r3, r2, #1
 8000728:	d00c      	beq.n	8000744 <__swsetup_r+0xbc>
 800072a:	2300      	movs	r3, #0
 800072c:	60a3      	str	r3, [r4, #8]
 800072e:	6963      	ldr	r3, [r4, #20]
 8000730:	425b      	negs	r3, r3
 8000732:	61a3      	str	r3, [r4, #24]
 8000734:	6923      	ldr	r3, [r4, #16]
 8000736:	b953      	cbnz	r3, 800074e <__swsetup_r+0xc6>
 8000738:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800073c:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 8000740:	d1ba      	bne.n	80006b8 <__swsetup_r+0x30>
 8000742:	bd70      	pop	{r4, r5, r6, pc}
 8000744:	0792      	lsls	r2, r2, #30
 8000746:	bf58      	it	pl
 8000748:	6963      	ldrpl	r3, [r4, #20]
 800074a:	60a3      	str	r3, [r4, #8]
 800074c:	e7f2      	b.n	8000734 <__swsetup_r+0xac>
 800074e:	2000      	movs	r0, #0
 8000750:	e7f7      	b.n	8000742 <__swsetup_r+0xba>
 8000752:	bf00      	nop
 8000754:	20000000 	.word	0x20000000
 8000758:	08000e30 	.word	0x08000e30
 800075c:	08000e50 	.word	0x08000e50
 8000760:	08000e10 	.word	0x08000e10

08000764 <__sflush_r>:
 8000764:	898a      	ldrh	r2, [r1, #12]
 8000766:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800076a:	4605      	mov	r5, r0
 800076c:	0710      	lsls	r0, r2, #28
 800076e:	460c      	mov	r4, r1
 8000770:	d458      	bmi.n	8000824 <__sflush_r+0xc0>
 8000772:	684b      	ldr	r3, [r1, #4]
 8000774:	2b00      	cmp	r3, #0
 8000776:	dc05      	bgt.n	8000784 <__sflush_r+0x20>
 8000778:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800077a:	2b00      	cmp	r3, #0
 800077c:	dc02      	bgt.n	8000784 <__sflush_r+0x20>
 800077e:	2000      	movs	r0, #0
 8000780:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000784:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000786:	2e00      	cmp	r6, #0
 8000788:	d0f9      	beq.n	800077e <__sflush_r+0x1a>
 800078a:	2300      	movs	r3, #0
 800078c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000790:	682f      	ldr	r7, [r5, #0]
 8000792:	6a21      	ldr	r1, [r4, #32]
 8000794:	602b      	str	r3, [r5, #0]
 8000796:	d032      	beq.n	80007fe <__sflush_r+0x9a>
 8000798:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800079a:	89a3      	ldrh	r3, [r4, #12]
 800079c:	075a      	lsls	r2, r3, #29
 800079e:	d505      	bpl.n	80007ac <__sflush_r+0x48>
 80007a0:	6863      	ldr	r3, [r4, #4]
 80007a2:	1ac0      	subs	r0, r0, r3
 80007a4:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80007a6:	b10b      	cbz	r3, 80007ac <__sflush_r+0x48>
 80007a8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80007aa:	1ac0      	subs	r0, r0, r3
 80007ac:	2300      	movs	r3, #0
 80007ae:	4602      	mov	r2, r0
 80007b0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80007b2:	6a21      	ldr	r1, [r4, #32]
 80007b4:	4628      	mov	r0, r5
 80007b6:	47b0      	blx	r6
 80007b8:	1c43      	adds	r3, r0, #1
 80007ba:	89a3      	ldrh	r3, [r4, #12]
 80007bc:	d106      	bne.n	80007cc <__sflush_r+0x68>
 80007be:	6829      	ldr	r1, [r5, #0]
 80007c0:	291d      	cmp	r1, #29
 80007c2:	d848      	bhi.n	8000856 <__sflush_r+0xf2>
 80007c4:	4a29      	ldr	r2, [pc, #164]	; (800086c <__sflush_r+0x108>)
 80007c6:	40ca      	lsrs	r2, r1
 80007c8:	07d6      	lsls	r6, r2, #31
 80007ca:	d544      	bpl.n	8000856 <__sflush_r+0xf2>
 80007cc:	2200      	movs	r2, #0
 80007ce:	6062      	str	r2, [r4, #4]
 80007d0:	6922      	ldr	r2, [r4, #16]
 80007d2:	04d9      	lsls	r1, r3, #19
 80007d4:	6022      	str	r2, [r4, #0]
 80007d6:	d504      	bpl.n	80007e2 <__sflush_r+0x7e>
 80007d8:	1c42      	adds	r2, r0, #1
 80007da:	d101      	bne.n	80007e0 <__sflush_r+0x7c>
 80007dc:	682b      	ldr	r3, [r5, #0]
 80007de:	b903      	cbnz	r3, 80007e2 <__sflush_r+0x7e>
 80007e0:	6560      	str	r0, [r4, #84]	; 0x54
 80007e2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80007e4:	602f      	str	r7, [r5, #0]
 80007e6:	2900      	cmp	r1, #0
 80007e8:	d0c9      	beq.n	800077e <__sflush_r+0x1a>
 80007ea:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80007ee:	4299      	cmp	r1, r3
 80007f0:	d002      	beq.n	80007f8 <__sflush_r+0x94>
 80007f2:	4628      	mov	r0, r5
 80007f4:	f000 f994 	bl	8000b20 <_free_r>
 80007f8:	2000      	movs	r0, #0
 80007fa:	6360      	str	r0, [r4, #52]	; 0x34
 80007fc:	e7c0      	b.n	8000780 <__sflush_r+0x1c>
 80007fe:	2301      	movs	r3, #1
 8000800:	4628      	mov	r0, r5
 8000802:	47b0      	blx	r6
 8000804:	1c41      	adds	r1, r0, #1
 8000806:	d1c8      	bne.n	800079a <__sflush_r+0x36>
 8000808:	682b      	ldr	r3, [r5, #0]
 800080a:	2b00      	cmp	r3, #0
 800080c:	d0c5      	beq.n	800079a <__sflush_r+0x36>
 800080e:	2b1d      	cmp	r3, #29
 8000810:	d001      	beq.n	8000816 <__sflush_r+0xb2>
 8000812:	2b16      	cmp	r3, #22
 8000814:	d101      	bne.n	800081a <__sflush_r+0xb6>
 8000816:	602f      	str	r7, [r5, #0]
 8000818:	e7b1      	b.n	800077e <__sflush_r+0x1a>
 800081a:	89a3      	ldrh	r3, [r4, #12]
 800081c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000820:	81a3      	strh	r3, [r4, #12]
 8000822:	e7ad      	b.n	8000780 <__sflush_r+0x1c>
 8000824:	690f      	ldr	r7, [r1, #16]
 8000826:	2f00      	cmp	r7, #0
 8000828:	d0a9      	beq.n	800077e <__sflush_r+0x1a>
 800082a:	0793      	lsls	r3, r2, #30
 800082c:	bf18      	it	ne
 800082e:	2300      	movne	r3, #0
 8000830:	680e      	ldr	r6, [r1, #0]
 8000832:	bf08      	it	eq
 8000834:	694b      	ldreq	r3, [r1, #20]
 8000836:	eba6 0807 	sub.w	r8, r6, r7
 800083a:	600f      	str	r7, [r1, #0]
 800083c:	608b      	str	r3, [r1, #8]
 800083e:	f1b8 0f00 	cmp.w	r8, #0
 8000842:	dd9c      	ble.n	800077e <__sflush_r+0x1a>
 8000844:	4643      	mov	r3, r8
 8000846:	463a      	mov	r2, r7
 8000848:	6a21      	ldr	r1, [r4, #32]
 800084a:	4628      	mov	r0, r5
 800084c:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800084e:	47b0      	blx	r6
 8000850:	2800      	cmp	r0, #0
 8000852:	dc06      	bgt.n	8000862 <__sflush_r+0xfe>
 8000854:	89a3      	ldrh	r3, [r4, #12]
 8000856:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800085a:	81a3      	strh	r3, [r4, #12]
 800085c:	f04f 30ff 	mov.w	r0, #4294967295
 8000860:	e78e      	b.n	8000780 <__sflush_r+0x1c>
 8000862:	4407      	add	r7, r0
 8000864:	eba8 0800 	sub.w	r8, r8, r0
 8000868:	e7e9      	b.n	800083e <__sflush_r+0xda>
 800086a:	bf00      	nop
 800086c:	20400001 	.word	0x20400001

08000870 <_fflush_r>:
 8000870:	b538      	push	{r3, r4, r5, lr}
 8000872:	690b      	ldr	r3, [r1, #16]
 8000874:	4605      	mov	r5, r0
 8000876:	460c      	mov	r4, r1
 8000878:	b1db      	cbz	r3, 80008b2 <_fflush_r+0x42>
 800087a:	b118      	cbz	r0, 8000884 <_fflush_r+0x14>
 800087c:	6983      	ldr	r3, [r0, #24]
 800087e:	b90b      	cbnz	r3, 8000884 <_fflush_r+0x14>
 8000880:	f000 f860 	bl	8000944 <__sinit>
 8000884:	4b0c      	ldr	r3, [pc, #48]	; (80008b8 <_fflush_r+0x48>)
 8000886:	429c      	cmp	r4, r3
 8000888:	d109      	bne.n	800089e <_fflush_r+0x2e>
 800088a:	686c      	ldr	r4, [r5, #4]
 800088c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000890:	b17b      	cbz	r3, 80008b2 <_fflush_r+0x42>
 8000892:	4621      	mov	r1, r4
 8000894:	4628      	mov	r0, r5
 8000896:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800089a:	f7ff bf63 	b.w	8000764 <__sflush_r>
 800089e:	4b07      	ldr	r3, [pc, #28]	; (80008bc <_fflush_r+0x4c>)
 80008a0:	429c      	cmp	r4, r3
 80008a2:	d101      	bne.n	80008a8 <_fflush_r+0x38>
 80008a4:	68ac      	ldr	r4, [r5, #8]
 80008a6:	e7f1      	b.n	800088c <_fflush_r+0x1c>
 80008a8:	4b05      	ldr	r3, [pc, #20]	; (80008c0 <_fflush_r+0x50>)
 80008aa:	429c      	cmp	r4, r3
 80008ac:	bf08      	it	eq
 80008ae:	68ec      	ldreq	r4, [r5, #12]
 80008b0:	e7ec      	b.n	800088c <_fflush_r+0x1c>
 80008b2:	2000      	movs	r0, #0
 80008b4:	bd38      	pop	{r3, r4, r5, pc}
 80008b6:	bf00      	nop
 80008b8:	08000e30 	.word	0x08000e30
 80008bc:	08000e50 	.word	0x08000e50
 80008c0:	08000e10 	.word	0x08000e10

080008c4 <std>:
 80008c4:	2300      	movs	r3, #0
 80008c6:	b510      	push	{r4, lr}
 80008c8:	4604      	mov	r4, r0
 80008ca:	e9c0 3300 	strd	r3, r3, [r0]
 80008ce:	6083      	str	r3, [r0, #8]
 80008d0:	8181      	strh	r1, [r0, #12]
 80008d2:	6643      	str	r3, [r0, #100]	; 0x64
 80008d4:	81c2      	strh	r2, [r0, #14]
 80008d6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80008da:	6183      	str	r3, [r0, #24]
 80008dc:	4619      	mov	r1, r3
 80008de:	2208      	movs	r2, #8
 80008e0:	305c      	adds	r0, #92	; 0x5c
 80008e2:	f7ff fe13 	bl	800050c <memset>
 80008e6:	4b05      	ldr	r3, [pc, #20]	; (80008fc <std+0x38>)
 80008e8:	6224      	str	r4, [r4, #32]
 80008ea:	6263      	str	r3, [r4, #36]	; 0x24
 80008ec:	4b04      	ldr	r3, [pc, #16]	; (8000900 <std+0x3c>)
 80008ee:	62a3      	str	r3, [r4, #40]	; 0x28
 80008f0:	4b04      	ldr	r3, [pc, #16]	; (8000904 <std+0x40>)
 80008f2:	62e3      	str	r3, [r4, #44]	; 0x2c
 80008f4:	4b04      	ldr	r3, [pc, #16]	; (8000908 <std+0x44>)
 80008f6:	6323      	str	r3, [r4, #48]	; 0x30
 80008f8:	bd10      	pop	{r4, pc}
 80008fa:	bf00      	nop
 80008fc:	08000c8d 	.word	0x08000c8d
 8000900:	08000caf 	.word	0x08000caf
 8000904:	08000ce7 	.word	0x08000ce7
 8000908:	08000d0b 	.word	0x08000d0b

0800090c <_cleanup_r>:
 800090c:	4901      	ldr	r1, [pc, #4]	; (8000914 <_cleanup_r+0x8>)
 800090e:	f000 b885 	b.w	8000a1c <_fwalk_reent>
 8000912:	bf00      	nop
 8000914:	08000871 	.word	0x08000871

08000918 <__sfmoreglue>:
 8000918:	b570      	push	{r4, r5, r6, lr}
 800091a:	2568      	movs	r5, #104	; 0x68
 800091c:	1e4a      	subs	r2, r1, #1
 800091e:	4355      	muls	r5, r2
 8000920:	460e      	mov	r6, r1
 8000922:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000926:	f000 f947 	bl	8000bb8 <_malloc_r>
 800092a:	4604      	mov	r4, r0
 800092c:	b140      	cbz	r0, 8000940 <__sfmoreglue+0x28>
 800092e:	2100      	movs	r1, #0
 8000930:	e9c0 1600 	strd	r1, r6, [r0]
 8000934:	300c      	adds	r0, #12
 8000936:	60a0      	str	r0, [r4, #8]
 8000938:	f105 0268 	add.w	r2, r5, #104	; 0x68
 800093c:	f7ff fde6 	bl	800050c <memset>
 8000940:	4620      	mov	r0, r4
 8000942:	bd70      	pop	{r4, r5, r6, pc}

08000944 <__sinit>:
 8000944:	6983      	ldr	r3, [r0, #24]
 8000946:	b510      	push	{r4, lr}
 8000948:	4604      	mov	r4, r0
 800094a:	bb33      	cbnz	r3, 800099a <__sinit+0x56>
 800094c:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 8000950:	6503      	str	r3, [r0, #80]	; 0x50
 8000952:	4b12      	ldr	r3, [pc, #72]	; (800099c <__sinit+0x58>)
 8000954:	4a12      	ldr	r2, [pc, #72]	; (80009a0 <__sinit+0x5c>)
 8000956:	681b      	ldr	r3, [r3, #0]
 8000958:	6282      	str	r2, [r0, #40]	; 0x28
 800095a:	4298      	cmp	r0, r3
 800095c:	bf04      	itt	eq
 800095e:	2301      	moveq	r3, #1
 8000960:	6183      	streq	r3, [r0, #24]
 8000962:	f000 f81f 	bl	80009a4 <__sfp>
 8000966:	6060      	str	r0, [r4, #4]
 8000968:	4620      	mov	r0, r4
 800096a:	f000 f81b 	bl	80009a4 <__sfp>
 800096e:	60a0      	str	r0, [r4, #8]
 8000970:	4620      	mov	r0, r4
 8000972:	f000 f817 	bl	80009a4 <__sfp>
 8000976:	2200      	movs	r2, #0
 8000978:	60e0      	str	r0, [r4, #12]
 800097a:	2104      	movs	r1, #4
 800097c:	6860      	ldr	r0, [r4, #4]
 800097e:	f7ff ffa1 	bl	80008c4 <std>
 8000982:	2201      	movs	r2, #1
 8000984:	2109      	movs	r1, #9
 8000986:	68a0      	ldr	r0, [r4, #8]
 8000988:	f7ff ff9c 	bl	80008c4 <std>
 800098c:	2202      	movs	r2, #2
 800098e:	2112      	movs	r1, #18
 8000990:	68e0      	ldr	r0, [r4, #12]
 8000992:	f7ff ff97 	bl	80008c4 <std>
 8000996:	2301      	movs	r3, #1
 8000998:	61a3      	str	r3, [r4, #24]
 800099a:	bd10      	pop	{r4, pc}
 800099c:	08000e0c 	.word	0x08000e0c
 80009a0:	0800090d 	.word	0x0800090d

080009a4 <__sfp>:
 80009a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009a6:	4b1b      	ldr	r3, [pc, #108]	; (8000a14 <__sfp+0x70>)
 80009a8:	4607      	mov	r7, r0
 80009aa:	681e      	ldr	r6, [r3, #0]
 80009ac:	69b3      	ldr	r3, [r6, #24]
 80009ae:	b913      	cbnz	r3, 80009b6 <__sfp+0x12>
 80009b0:	4630      	mov	r0, r6
 80009b2:	f7ff ffc7 	bl	8000944 <__sinit>
 80009b6:	3648      	adds	r6, #72	; 0x48
 80009b8:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80009bc:	3b01      	subs	r3, #1
 80009be:	d503      	bpl.n	80009c8 <__sfp+0x24>
 80009c0:	6833      	ldr	r3, [r6, #0]
 80009c2:	b133      	cbz	r3, 80009d2 <__sfp+0x2e>
 80009c4:	6836      	ldr	r6, [r6, #0]
 80009c6:	e7f7      	b.n	80009b8 <__sfp+0x14>
 80009c8:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80009cc:	b16d      	cbz	r5, 80009ea <__sfp+0x46>
 80009ce:	3468      	adds	r4, #104	; 0x68
 80009d0:	e7f4      	b.n	80009bc <__sfp+0x18>
 80009d2:	2104      	movs	r1, #4
 80009d4:	4638      	mov	r0, r7
 80009d6:	f7ff ff9f 	bl	8000918 <__sfmoreglue>
 80009da:	6030      	str	r0, [r6, #0]
 80009dc:	2800      	cmp	r0, #0
 80009de:	d1f1      	bne.n	80009c4 <__sfp+0x20>
 80009e0:	230c      	movs	r3, #12
 80009e2:	4604      	mov	r4, r0
 80009e4:	603b      	str	r3, [r7, #0]
 80009e6:	4620      	mov	r0, r4
 80009e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80009ea:	4b0b      	ldr	r3, [pc, #44]	; (8000a18 <__sfp+0x74>)
 80009ec:	6665      	str	r5, [r4, #100]	; 0x64
 80009ee:	e9c4 5500 	strd	r5, r5, [r4]
 80009f2:	60a5      	str	r5, [r4, #8]
 80009f4:	e9c4 3503 	strd	r3, r5, [r4, #12]
 80009f8:	e9c4 5505 	strd	r5, r5, [r4, #20]
 80009fc:	2208      	movs	r2, #8
 80009fe:	4629      	mov	r1, r5
 8000a00:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000a04:	f7ff fd82 	bl	800050c <memset>
 8000a08:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000a0c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000a10:	e7e9      	b.n	80009e6 <__sfp+0x42>
 8000a12:	bf00      	nop
 8000a14:	08000e0c 	.word	0x08000e0c
 8000a18:	ffff0001 	.word	0xffff0001

08000a1c <_fwalk_reent>:
 8000a1c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000a20:	4680      	mov	r8, r0
 8000a22:	4689      	mov	r9, r1
 8000a24:	2600      	movs	r6, #0
 8000a26:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000a2a:	b914      	cbnz	r4, 8000a32 <_fwalk_reent+0x16>
 8000a2c:	4630      	mov	r0, r6
 8000a2e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000a32:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 8000a36:	3f01      	subs	r7, #1
 8000a38:	d501      	bpl.n	8000a3e <_fwalk_reent+0x22>
 8000a3a:	6824      	ldr	r4, [r4, #0]
 8000a3c:	e7f5      	b.n	8000a2a <_fwalk_reent+0xe>
 8000a3e:	89ab      	ldrh	r3, [r5, #12]
 8000a40:	2b01      	cmp	r3, #1
 8000a42:	d907      	bls.n	8000a54 <_fwalk_reent+0x38>
 8000a44:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000a48:	3301      	adds	r3, #1
 8000a4a:	d003      	beq.n	8000a54 <_fwalk_reent+0x38>
 8000a4c:	4629      	mov	r1, r5
 8000a4e:	4640      	mov	r0, r8
 8000a50:	47c8      	blx	r9
 8000a52:	4306      	orrs	r6, r0
 8000a54:	3568      	adds	r5, #104	; 0x68
 8000a56:	e7ee      	b.n	8000a36 <_fwalk_reent+0x1a>

08000a58 <__swhatbuf_r>:
 8000a58:	b570      	push	{r4, r5, r6, lr}
 8000a5a:	460e      	mov	r6, r1
 8000a5c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000a60:	b096      	sub	sp, #88	; 0x58
 8000a62:	2900      	cmp	r1, #0
 8000a64:	4614      	mov	r4, r2
 8000a66:	461d      	mov	r5, r3
 8000a68:	da07      	bge.n	8000a7a <__swhatbuf_r+0x22>
 8000a6a:	2300      	movs	r3, #0
 8000a6c:	602b      	str	r3, [r5, #0]
 8000a6e:	89b3      	ldrh	r3, [r6, #12]
 8000a70:	061a      	lsls	r2, r3, #24
 8000a72:	d410      	bmi.n	8000a96 <__swhatbuf_r+0x3e>
 8000a74:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000a78:	e00e      	b.n	8000a98 <__swhatbuf_r+0x40>
 8000a7a:	466a      	mov	r2, sp
 8000a7c:	f000 f96c 	bl	8000d58 <_fstat_r>
 8000a80:	2800      	cmp	r0, #0
 8000a82:	dbf2      	blt.n	8000a6a <__swhatbuf_r+0x12>
 8000a84:	9a01      	ldr	r2, [sp, #4]
 8000a86:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000a8a:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000a8e:	425a      	negs	r2, r3
 8000a90:	415a      	adcs	r2, r3
 8000a92:	602a      	str	r2, [r5, #0]
 8000a94:	e7ee      	b.n	8000a74 <__swhatbuf_r+0x1c>
 8000a96:	2340      	movs	r3, #64	; 0x40
 8000a98:	2000      	movs	r0, #0
 8000a9a:	6023      	str	r3, [r4, #0]
 8000a9c:	b016      	add	sp, #88	; 0x58
 8000a9e:	bd70      	pop	{r4, r5, r6, pc}

08000aa0 <__smakebuf_r>:
 8000aa0:	898b      	ldrh	r3, [r1, #12]
 8000aa2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000aa4:	079d      	lsls	r5, r3, #30
 8000aa6:	4606      	mov	r6, r0
 8000aa8:	460c      	mov	r4, r1
 8000aaa:	d507      	bpl.n	8000abc <__smakebuf_r+0x1c>
 8000aac:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000ab0:	6023      	str	r3, [r4, #0]
 8000ab2:	6123      	str	r3, [r4, #16]
 8000ab4:	2301      	movs	r3, #1
 8000ab6:	6163      	str	r3, [r4, #20]
 8000ab8:	b002      	add	sp, #8
 8000aba:	bd70      	pop	{r4, r5, r6, pc}
 8000abc:	ab01      	add	r3, sp, #4
 8000abe:	466a      	mov	r2, sp
 8000ac0:	f7ff ffca 	bl	8000a58 <__swhatbuf_r>
 8000ac4:	9900      	ldr	r1, [sp, #0]
 8000ac6:	4605      	mov	r5, r0
 8000ac8:	4630      	mov	r0, r6
 8000aca:	f000 f875 	bl	8000bb8 <_malloc_r>
 8000ace:	b948      	cbnz	r0, 8000ae4 <__smakebuf_r+0x44>
 8000ad0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000ad4:	059a      	lsls	r2, r3, #22
 8000ad6:	d4ef      	bmi.n	8000ab8 <__smakebuf_r+0x18>
 8000ad8:	f023 0303 	bic.w	r3, r3, #3
 8000adc:	f043 0302 	orr.w	r3, r3, #2
 8000ae0:	81a3      	strh	r3, [r4, #12]
 8000ae2:	e7e3      	b.n	8000aac <__smakebuf_r+0xc>
 8000ae4:	4b0d      	ldr	r3, [pc, #52]	; (8000b1c <__smakebuf_r+0x7c>)
 8000ae6:	62b3      	str	r3, [r6, #40]	; 0x28
 8000ae8:	89a3      	ldrh	r3, [r4, #12]
 8000aea:	6020      	str	r0, [r4, #0]
 8000aec:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000af0:	81a3      	strh	r3, [r4, #12]
 8000af2:	9b00      	ldr	r3, [sp, #0]
 8000af4:	6120      	str	r0, [r4, #16]
 8000af6:	6163      	str	r3, [r4, #20]
 8000af8:	9b01      	ldr	r3, [sp, #4]
 8000afa:	b15b      	cbz	r3, 8000b14 <__smakebuf_r+0x74>
 8000afc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000b00:	4630      	mov	r0, r6
 8000b02:	f000 f93b 	bl	8000d7c <_isatty_r>
 8000b06:	b128      	cbz	r0, 8000b14 <__smakebuf_r+0x74>
 8000b08:	89a3      	ldrh	r3, [r4, #12]
 8000b0a:	f023 0303 	bic.w	r3, r3, #3
 8000b0e:	f043 0301 	orr.w	r3, r3, #1
 8000b12:	81a3      	strh	r3, [r4, #12]
 8000b14:	89a3      	ldrh	r3, [r4, #12]
 8000b16:	431d      	orrs	r5, r3
 8000b18:	81a5      	strh	r5, [r4, #12]
 8000b1a:	e7cd      	b.n	8000ab8 <__smakebuf_r+0x18>
 8000b1c:	0800090d 	.word	0x0800090d

08000b20 <_free_r>:
 8000b20:	b538      	push	{r3, r4, r5, lr}
 8000b22:	4605      	mov	r5, r0
 8000b24:	2900      	cmp	r1, #0
 8000b26:	d043      	beq.n	8000bb0 <_free_r+0x90>
 8000b28:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000b2c:	1f0c      	subs	r4, r1, #4
 8000b2e:	2b00      	cmp	r3, #0
 8000b30:	bfb8      	it	lt
 8000b32:	18e4      	addlt	r4, r4, r3
 8000b34:	f000 f944 	bl	8000dc0 <__malloc_lock>
 8000b38:	4a1e      	ldr	r2, [pc, #120]	; (8000bb4 <_free_r+0x94>)
 8000b3a:	6813      	ldr	r3, [r2, #0]
 8000b3c:	4610      	mov	r0, r2
 8000b3e:	b933      	cbnz	r3, 8000b4e <_free_r+0x2e>
 8000b40:	6063      	str	r3, [r4, #4]
 8000b42:	6014      	str	r4, [r2, #0]
 8000b44:	4628      	mov	r0, r5
 8000b46:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000b4a:	f000 b93a 	b.w	8000dc2 <__malloc_unlock>
 8000b4e:	42a3      	cmp	r3, r4
 8000b50:	d90b      	bls.n	8000b6a <_free_r+0x4a>
 8000b52:	6821      	ldr	r1, [r4, #0]
 8000b54:	1862      	adds	r2, r4, r1
 8000b56:	4293      	cmp	r3, r2
 8000b58:	bf01      	itttt	eq
 8000b5a:	681a      	ldreq	r2, [r3, #0]
 8000b5c:	685b      	ldreq	r3, [r3, #4]
 8000b5e:	1852      	addeq	r2, r2, r1
 8000b60:	6022      	streq	r2, [r4, #0]
 8000b62:	6063      	str	r3, [r4, #4]
 8000b64:	6004      	str	r4, [r0, #0]
 8000b66:	e7ed      	b.n	8000b44 <_free_r+0x24>
 8000b68:	4613      	mov	r3, r2
 8000b6a:	685a      	ldr	r2, [r3, #4]
 8000b6c:	b10a      	cbz	r2, 8000b72 <_free_r+0x52>
 8000b6e:	42a2      	cmp	r2, r4
 8000b70:	d9fa      	bls.n	8000b68 <_free_r+0x48>
 8000b72:	6819      	ldr	r1, [r3, #0]
 8000b74:	1858      	adds	r0, r3, r1
 8000b76:	42a0      	cmp	r0, r4
 8000b78:	d10b      	bne.n	8000b92 <_free_r+0x72>
 8000b7a:	6820      	ldr	r0, [r4, #0]
 8000b7c:	4401      	add	r1, r0
 8000b7e:	1858      	adds	r0, r3, r1
 8000b80:	4282      	cmp	r2, r0
 8000b82:	6019      	str	r1, [r3, #0]
 8000b84:	d1de      	bne.n	8000b44 <_free_r+0x24>
 8000b86:	6810      	ldr	r0, [r2, #0]
 8000b88:	6852      	ldr	r2, [r2, #4]
 8000b8a:	4401      	add	r1, r0
 8000b8c:	6019      	str	r1, [r3, #0]
 8000b8e:	605a      	str	r2, [r3, #4]
 8000b90:	e7d8      	b.n	8000b44 <_free_r+0x24>
 8000b92:	d902      	bls.n	8000b9a <_free_r+0x7a>
 8000b94:	230c      	movs	r3, #12
 8000b96:	602b      	str	r3, [r5, #0]
 8000b98:	e7d4      	b.n	8000b44 <_free_r+0x24>
 8000b9a:	6820      	ldr	r0, [r4, #0]
 8000b9c:	1821      	adds	r1, r4, r0
 8000b9e:	428a      	cmp	r2, r1
 8000ba0:	bf01      	itttt	eq
 8000ba2:	6811      	ldreq	r1, [r2, #0]
 8000ba4:	6852      	ldreq	r2, [r2, #4]
 8000ba6:	1809      	addeq	r1, r1, r0
 8000ba8:	6021      	streq	r1, [r4, #0]
 8000baa:	6062      	str	r2, [r4, #4]
 8000bac:	605c      	str	r4, [r3, #4]
 8000bae:	e7c9      	b.n	8000b44 <_free_r+0x24>
 8000bb0:	bd38      	pop	{r3, r4, r5, pc}
 8000bb2:	bf00      	nop
 8000bb4:	20000084 	.word	0x20000084

08000bb8 <_malloc_r>:
 8000bb8:	b570      	push	{r4, r5, r6, lr}
 8000bba:	1ccd      	adds	r5, r1, #3
 8000bbc:	f025 0503 	bic.w	r5, r5, #3
 8000bc0:	3508      	adds	r5, #8
 8000bc2:	2d0c      	cmp	r5, #12
 8000bc4:	bf38      	it	cc
 8000bc6:	250c      	movcc	r5, #12
 8000bc8:	2d00      	cmp	r5, #0
 8000bca:	4606      	mov	r6, r0
 8000bcc:	db01      	blt.n	8000bd2 <_malloc_r+0x1a>
 8000bce:	42a9      	cmp	r1, r5
 8000bd0:	d903      	bls.n	8000bda <_malloc_r+0x22>
 8000bd2:	230c      	movs	r3, #12
 8000bd4:	6033      	str	r3, [r6, #0]
 8000bd6:	2000      	movs	r0, #0
 8000bd8:	bd70      	pop	{r4, r5, r6, pc}
 8000bda:	f000 f8f1 	bl	8000dc0 <__malloc_lock>
 8000bde:	4a21      	ldr	r2, [pc, #132]	; (8000c64 <_malloc_r+0xac>)
 8000be0:	6814      	ldr	r4, [r2, #0]
 8000be2:	4621      	mov	r1, r4
 8000be4:	b991      	cbnz	r1, 8000c0c <_malloc_r+0x54>
 8000be6:	4c20      	ldr	r4, [pc, #128]	; (8000c68 <_malloc_r+0xb0>)
 8000be8:	6823      	ldr	r3, [r4, #0]
 8000bea:	b91b      	cbnz	r3, 8000bf4 <_malloc_r+0x3c>
 8000bec:	4630      	mov	r0, r6
 8000bee:	f000 f83d 	bl	8000c6c <_sbrk_r>
 8000bf2:	6020      	str	r0, [r4, #0]
 8000bf4:	4629      	mov	r1, r5
 8000bf6:	4630      	mov	r0, r6
 8000bf8:	f000 f838 	bl	8000c6c <_sbrk_r>
 8000bfc:	1c43      	adds	r3, r0, #1
 8000bfe:	d124      	bne.n	8000c4a <_malloc_r+0x92>
 8000c00:	230c      	movs	r3, #12
 8000c02:	4630      	mov	r0, r6
 8000c04:	6033      	str	r3, [r6, #0]
 8000c06:	f000 f8dc 	bl	8000dc2 <__malloc_unlock>
 8000c0a:	e7e4      	b.n	8000bd6 <_malloc_r+0x1e>
 8000c0c:	680b      	ldr	r3, [r1, #0]
 8000c0e:	1b5b      	subs	r3, r3, r5
 8000c10:	d418      	bmi.n	8000c44 <_malloc_r+0x8c>
 8000c12:	2b0b      	cmp	r3, #11
 8000c14:	d90f      	bls.n	8000c36 <_malloc_r+0x7e>
 8000c16:	600b      	str	r3, [r1, #0]
 8000c18:	18cc      	adds	r4, r1, r3
 8000c1a:	50cd      	str	r5, [r1, r3]
 8000c1c:	4630      	mov	r0, r6
 8000c1e:	f000 f8d0 	bl	8000dc2 <__malloc_unlock>
 8000c22:	f104 000b 	add.w	r0, r4, #11
 8000c26:	1d23      	adds	r3, r4, #4
 8000c28:	f020 0007 	bic.w	r0, r0, #7
 8000c2c:	1ac3      	subs	r3, r0, r3
 8000c2e:	d0d3      	beq.n	8000bd8 <_malloc_r+0x20>
 8000c30:	425a      	negs	r2, r3
 8000c32:	50e2      	str	r2, [r4, r3]
 8000c34:	e7d0      	b.n	8000bd8 <_malloc_r+0x20>
 8000c36:	684b      	ldr	r3, [r1, #4]
 8000c38:	428c      	cmp	r4, r1
 8000c3a:	bf16      	itet	ne
 8000c3c:	6063      	strne	r3, [r4, #4]
 8000c3e:	6013      	streq	r3, [r2, #0]
 8000c40:	460c      	movne	r4, r1
 8000c42:	e7eb      	b.n	8000c1c <_malloc_r+0x64>
 8000c44:	460c      	mov	r4, r1
 8000c46:	6849      	ldr	r1, [r1, #4]
 8000c48:	e7cc      	b.n	8000be4 <_malloc_r+0x2c>
 8000c4a:	1cc4      	adds	r4, r0, #3
 8000c4c:	f024 0403 	bic.w	r4, r4, #3
 8000c50:	42a0      	cmp	r0, r4
 8000c52:	d005      	beq.n	8000c60 <_malloc_r+0xa8>
 8000c54:	1a21      	subs	r1, r4, r0
 8000c56:	4630      	mov	r0, r6
 8000c58:	f000 f808 	bl	8000c6c <_sbrk_r>
 8000c5c:	3001      	adds	r0, #1
 8000c5e:	d0cf      	beq.n	8000c00 <_malloc_r+0x48>
 8000c60:	6025      	str	r5, [r4, #0]
 8000c62:	e7db      	b.n	8000c1c <_malloc_r+0x64>
 8000c64:	20000084 	.word	0x20000084
 8000c68:	20000088 	.word	0x20000088

08000c6c <_sbrk_r>:
 8000c6c:	b538      	push	{r3, r4, r5, lr}
 8000c6e:	2300      	movs	r3, #0
 8000c70:	4c05      	ldr	r4, [pc, #20]	; (8000c88 <_sbrk_r+0x1c>)
 8000c72:	4605      	mov	r5, r0
 8000c74:	4608      	mov	r0, r1
 8000c76:	6023      	str	r3, [r4, #0]
 8000c78:	f7ff fbbe 	bl	80003f8 <_sbrk>
 8000c7c:	1c43      	adds	r3, r0, #1
 8000c7e:	d102      	bne.n	8000c86 <_sbrk_r+0x1a>
 8000c80:	6823      	ldr	r3, [r4, #0]
 8000c82:	b103      	cbz	r3, 8000c86 <_sbrk_r+0x1a>
 8000c84:	602b      	str	r3, [r5, #0]
 8000c86:	bd38      	pop	{r3, r4, r5, pc}
 8000c88:	2000008c 	.word	0x2000008c

08000c8c <__sread>:
 8000c8c:	b510      	push	{r4, lr}
 8000c8e:	460c      	mov	r4, r1
 8000c90:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c94:	f000 f896 	bl	8000dc4 <_read_r>
 8000c98:	2800      	cmp	r0, #0
 8000c9a:	bfab      	itete	ge
 8000c9c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000c9e:	89a3      	ldrhlt	r3, [r4, #12]
 8000ca0:	181b      	addge	r3, r3, r0
 8000ca2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000ca6:	bfac      	ite	ge
 8000ca8:	6563      	strge	r3, [r4, #84]	; 0x54
 8000caa:	81a3      	strhlt	r3, [r4, #12]
 8000cac:	bd10      	pop	{r4, pc}

08000cae <__swrite>:
 8000cae:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000cb2:	461f      	mov	r7, r3
 8000cb4:	898b      	ldrh	r3, [r1, #12]
 8000cb6:	4605      	mov	r5, r0
 8000cb8:	05db      	lsls	r3, r3, #23
 8000cba:	460c      	mov	r4, r1
 8000cbc:	4616      	mov	r6, r2
 8000cbe:	d505      	bpl.n	8000ccc <__swrite+0x1e>
 8000cc0:	2302      	movs	r3, #2
 8000cc2:	2200      	movs	r2, #0
 8000cc4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000cc8:	f000 f868 	bl	8000d9c <_lseek_r>
 8000ccc:	89a3      	ldrh	r3, [r4, #12]
 8000cce:	4632      	mov	r2, r6
 8000cd0:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000cd4:	81a3      	strh	r3, [r4, #12]
 8000cd6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000cda:	463b      	mov	r3, r7
 8000cdc:	4628      	mov	r0, r5
 8000cde:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000ce2:	f000 b817 	b.w	8000d14 <_write_r>

08000ce6 <__sseek>:
 8000ce6:	b510      	push	{r4, lr}
 8000ce8:	460c      	mov	r4, r1
 8000cea:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000cee:	f000 f855 	bl	8000d9c <_lseek_r>
 8000cf2:	1c43      	adds	r3, r0, #1
 8000cf4:	89a3      	ldrh	r3, [r4, #12]
 8000cf6:	bf15      	itete	ne
 8000cf8:	6560      	strne	r0, [r4, #84]	; 0x54
 8000cfa:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000cfe:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000d02:	81a3      	strheq	r3, [r4, #12]
 8000d04:	bf18      	it	ne
 8000d06:	81a3      	strhne	r3, [r4, #12]
 8000d08:	bd10      	pop	{r4, pc}

08000d0a <__sclose>:
 8000d0a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000d0e:	f000 b813 	b.w	8000d38 <_close_r>
	...

08000d14 <_write_r>:
 8000d14:	b538      	push	{r3, r4, r5, lr}
 8000d16:	4605      	mov	r5, r0
 8000d18:	4608      	mov	r0, r1
 8000d1a:	4611      	mov	r1, r2
 8000d1c:	2200      	movs	r2, #0
 8000d1e:	4c05      	ldr	r4, [pc, #20]	; (8000d34 <_write_r+0x20>)
 8000d20:	6022      	str	r2, [r4, #0]
 8000d22:	461a      	mov	r2, r3
 8000d24:	f7ff fb1b 	bl	800035e <_write>
 8000d28:	1c43      	adds	r3, r0, #1
 8000d2a:	d102      	bne.n	8000d32 <_write_r+0x1e>
 8000d2c:	6823      	ldr	r3, [r4, #0]
 8000d2e:	b103      	cbz	r3, 8000d32 <_write_r+0x1e>
 8000d30:	602b      	str	r3, [r5, #0]
 8000d32:	bd38      	pop	{r3, r4, r5, pc}
 8000d34:	2000008c 	.word	0x2000008c

08000d38 <_close_r>:
 8000d38:	b538      	push	{r3, r4, r5, lr}
 8000d3a:	2300      	movs	r3, #0
 8000d3c:	4c05      	ldr	r4, [pc, #20]	; (8000d54 <_close_r+0x1c>)
 8000d3e:	4605      	mov	r5, r0
 8000d40:	4608      	mov	r0, r1
 8000d42:	6023      	str	r3, [r4, #0]
 8000d44:	f7ff fb27 	bl	8000396 <_close>
 8000d48:	1c43      	adds	r3, r0, #1
 8000d4a:	d102      	bne.n	8000d52 <_close_r+0x1a>
 8000d4c:	6823      	ldr	r3, [r4, #0]
 8000d4e:	b103      	cbz	r3, 8000d52 <_close_r+0x1a>
 8000d50:	602b      	str	r3, [r5, #0]
 8000d52:	bd38      	pop	{r3, r4, r5, pc}
 8000d54:	2000008c 	.word	0x2000008c

08000d58 <_fstat_r>:
 8000d58:	b538      	push	{r3, r4, r5, lr}
 8000d5a:	2300      	movs	r3, #0
 8000d5c:	4c06      	ldr	r4, [pc, #24]	; (8000d78 <_fstat_r+0x20>)
 8000d5e:	4605      	mov	r5, r0
 8000d60:	4608      	mov	r0, r1
 8000d62:	4611      	mov	r1, r2
 8000d64:	6023      	str	r3, [r4, #0]
 8000d66:	f7ff fb21 	bl	80003ac <_fstat>
 8000d6a:	1c43      	adds	r3, r0, #1
 8000d6c:	d102      	bne.n	8000d74 <_fstat_r+0x1c>
 8000d6e:	6823      	ldr	r3, [r4, #0]
 8000d70:	b103      	cbz	r3, 8000d74 <_fstat_r+0x1c>
 8000d72:	602b      	str	r3, [r5, #0]
 8000d74:	bd38      	pop	{r3, r4, r5, pc}
 8000d76:	bf00      	nop
 8000d78:	2000008c 	.word	0x2000008c

08000d7c <_isatty_r>:
 8000d7c:	b538      	push	{r3, r4, r5, lr}
 8000d7e:	2300      	movs	r3, #0
 8000d80:	4c05      	ldr	r4, [pc, #20]	; (8000d98 <_isatty_r+0x1c>)
 8000d82:	4605      	mov	r5, r0
 8000d84:	4608      	mov	r0, r1
 8000d86:	6023      	str	r3, [r4, #0]
 8000d88:	f7ff fb1f 	bl	80003ca <_isatty>
 8000d8c:	1c43      	adds	r3, r0, #1
 8000d8e:	d102      	bne.n	8000d96 <_isatty_r+0x1a>
 8000d90:	6823      	ldr	r3, [r4, #0]
 8000d92:	b103      	cbz	r3, 8000d96 <_isatty_r+0x1a>
 8000d94:	602b      	str	r3, [r5, #0]
 8000d96:	bd38      	pop	{r3, r4, r5, pc}
 8000d98:	2000008c 	.word	0x2000008c

08000d9c <_lseek_r>:
 8000d9c:	b538      	push	{r3, r4, r5, lr}
 8000d9e:	4605      	mov	r5, r0
 8000da0:	4608      	mov	r0, r1
 8000da2:	4611      	mov	r1, r2
 8000da4:	2200      	movs	r2, #0
 8000da6:	4c05      	ldr	r4, [pc, #20]	; (8000dbc <_lseek_r+0x20>)
 8000da8:	6022      	str	r2, [r4, #0]
 8000daa:	461a      	mov	r2, r3
 8000dac:	f7ff fb17 	bl	80003de <_lseek>
 8000db0:	1c43      	adds	r3, r0, #1
 8000db2:	d102      	bne.n	8000dba <_lseek_r+0x1e>
 8000db4:	6823      	ldr	r3, [r4, #0]
 8000db6:	b103      	cbz	r3, 8000dba <_lseek_r+0x1e>
 8000db8:	602b      	str	r3, [r5, #0]
 8000dba:	bd38      	pop	{r3, r4, r5, pc}
 8000dbc:	2000008c 	.word	0x2000008c

08000dc0 <__malloc_lock>:
 8000dc0:	4770      	bx	lr

08000dc2 <__malloc_unlock>:
 8000dc2:	4770      	bx	lr

08000dc4 <_read_r>:
 8000dc4:	b538      	push	{r3, r4, r5, lr}
 8000dc6:	4605      	mov	r5, r0
 8000dc8:	4608      	mov	r0, r1
 8000dca:	4611      	mov	r1, r2
 8000dcc:	2200      	movs	r2, #0
 8000dce:	4c05      	ldr	r4, [pc, #20]	; (8000de4 <_read_r+0x20>)
 8000dd0:	6022      	str	r2, [r4, #0]
 8000dd2:	461a      	mov	r2, r3
 8000dd4:	f7ff faa6 	bl	8000324 <_read>
 8000dd8:	1c43      	adds	r3, r0, #1
 8000dda:	d102      	bne.n	8000de2 <_read_r+0x1e>
 8000ddc:	6823      	ldr	r3, [r4, #0]
 8000dde:	b103      	cbz	r3, 8000de2 <_read_r+0x1e>
 8000de0:	602b      	str	r3, [r5, #0]
 8000de2:	bd38      	pop	{r3, r4, r5, pc}
 8000de4:	2000008c 	.word	0x2000008c

08000de8 <_init>:
 8000de8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000dea:	bf00      	nop
 8000dec:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000dee:	bc08      	pop	{r3}
 8000df0:	469e      	mov	lr, r3
 8000df2:	4770      	bx	lr

08000df4 <_fini>:
 8000df4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000df6:	bf00      	nop
 8000df8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000dfa:	bc08      	pop	{r3}
 8000dfc:	469e      	mov	lr, r3
 8000dfe:	4770      	bx	lr
