
BluePill_LEDBlincPointer.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000c80  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000070  08000db0  08000db0  00010db0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000e20  08000e20  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08000e20  08000e20  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000e20  08000e20  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000e20  08000e20  00010e20  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000e24  08000e24  00010e24  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08000e28  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000002c  20000064  08000e8c  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000090  08000e8c  00020090  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   000021d1  00000000  00000000  0002008d  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000005a7  00000000  00000000  0002225e  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000110  00000000  00000000  00022808  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 000000d8  00000000  00000000  00022918  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00002adf  00000000  00000000  000229f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   000012b8  00000000  00000000  000254cf  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    000090ab  00000000  00000000  00026787  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0002f832  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000900  00000000  00000000  0002f8b0  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000064 	.word	0x20000064
 800014c:	00000000 	.word	0x00000000
 8000150:	08000d98 	.word	0x08000d98

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000068 	.word	0x20000068
 800016c:	08000d98 	.word	0x08000d98

08000170 <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 8000170:	b580      	push	{r7, lr}
 8000172:	b08c      	sub	sp, #48	; 0x30
 8000174:	af00      	add	r7, sp, #0
0x4001100C 		//PORTC; +0C

*///***************************************

//create pointer for RCC_APB2ENR
uint32_t *pClkCntrlReg	= (uint32_t*)0x40021018;
 8000176:	4b47      	ldr	r3, [pc, #284]	; (8000294 <main+0x124>)
 8000178:	627b      	str	r3, [r7, #36]	; 0x24

//create ponter for PortmodeReg
uint32_t *pPortAModeLowReg=		(uint32_t*)0x40010800;
 800017a:	4b47      	ldr	r3, [pc, #284]	; (8000298 <main+0x128>)
 800017c:	623b      	str	r3, [r7, #32]
uint32_t *pPortAModeHighReg=	(uint32_t*)0x40010804;
 800017e:	4b47      	ldr	r3, [pc, #284]	; (800029c <main+0x12c>)
 8000180:	61fb      	str	r3, [r7, #28]

uint32_t *pPortBModeLowReg=		(uint32_t*)0x40010C00;
 8000182:	4b47      	ldr	r3, [pc, #284]	; (80002a0 <main+0x130>)
 8000184:	61bb      	str	r3, [r7, #24]
uint32_t *pPortBModeHighReg= 	(uint32_t*)0x40010C04;
 8000186:	4b47      	ldr	r3, [pc, #284]	; (80002a4 <main+0x134>)
 8000188:	617b      	str	r3, [r7, #20]

//uint32_t *pPortCModeLowReg= 	(uint32_t*)0x40011000; не используется на блюпиле
uint32_t *pPortCModeHighReg= 	(uint32_t*)0x40011004;
 800018a:	4b47      	ldr	r3, [pc, #284]	; (80002a8 <main+0x138>)
 800018c:	613b      	str	r3, [r7, #16]

//create pointer for OutRegister
uint32_t *pPortAOutReg	= (uint32_t*)0x4001080C;
 800018e:	4b47      	ldr	r3, [pc, #284]	; (80002ac <main+0x13c>)
 8000190:	60fb      	str	r3, [r7, #12]
uint32_t *pPortBOutReg	= (uint32_t*)0x40010C0C;
 8000192:	4b47      	ldr	r3, [pc, #284]	; (80002b0 <main+0x140>)
 8000194:	60bb      	str	r3, [r7, #8]
uint32_t *pPortCOutReg	= (uint32_t*)0x4001100C;
 8000196:	4b47      	ldr	r3, [pc, #284]	; (80002b4 <main+0x144>)
 8000198:	607b      	str	r3, [r7, #4]

//Enable Clock for PORT ABC
*pClkCntrlReg |=0x1C;	//eneble PORTA-C;
 800019a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800019c:	681b      	ldr	r3, [r3, #0]
 800019e:	f043 021c 	orr.w	r2, r3, #28
 80001a2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80001a4:	601a      	str	r2, [r3, #0]

//Configure the mode of PORT-----------------------------------------------
//Configure Mode of PORTA
*pPortAModeLowReg	&=0x22222222;	//clear PA1;PA2;PA3;PA4;PA5;PA6;PA7;
 80001a6:	6a3b      	ldr	r3, [r7, #32]
 80001a8:	681b      	ldr	r3, [r3, #0]
 80001aa:	f003 3222 	and.w	r2, r3, #572662306	; 0x22222222
 80001ae:	6a3b      	ldr	r3, [r7, #32]
 80001b0:	601a      	str	r2, [r3, #0]
*pPortAModeLowReg	|=0x22222222;	//set	PA1;PA2;PA3;PA4;PA5;PA6;PA7;
 80001b2:	6a3b      	ldr	r3, [r7, #32]
 80001b4:	681b      	ldr	r3, [r3, #0]
 80001b6:	f043 3222 	orr.w	r2, r3, #572662306	; 0x22222222
 80001ba:	6a3b      	ldr	r3, [r7, #32]
 80001bc:	601a      	str	r2, [r3, #0]

*pPortAModeHighReg	&=0x2FF22222;	//clear	PA8;PA9;PA10;PA11;PA12;		PA15.
 80001be:	69fb      	ldr	r3, [r7, #28]
 80001c0:	681a      	ldr	r2, [r3, #0]
 80001c2:	4b3d      	ldr	r3, [pc, #244]	; (80002b8 <main+0x148>)
 80001c4:	4013      	ands	r3, r2
 80001c6:	69fa      	ldr	r2, [r7, #28]
 80001c8:	6013      	str	r3, [r2, #0]
*pPortAModeHighReg	|=0x2FF22222;	//set	PA8;PA9;PA10;PA11;PA12;		PA15.
 80001ca:	69fb      	ldr	r3, [r7, #28]
 80001cc:	681b      	ldr	r3, [r3, #0]
 80001ce:	f043 3322 	orr.w	r3, r3, #572662306	; 0x22222222
 80001d2:	f043 635d 	orr.w	r3, r3, #231735296	; 0xdd00000
 80001d6:	69fa      	ldr	r2, [r7, #28]
 80001d8:	6013      	str	r3, [r2, #0]

//Configure Mode of PORTB
*pPortBModeLowReg	&=0x22222F22;	//clear	PB1;	PB3;PB4;PB5;PB6;PB7;
 80001da:	69bb      	ldr	r3, [r7, #24]
 80001dc:	681a      	ldr	r2, [r3, #0]
 80001de:	4b37      	ldr	r3, [pc, #220]	; (80002bc <main+0x14c>)
 80001e0:	4013      	ands	r3, r2
 80001e2:	69ba      	ldr	r2, [r7, #24]
 80001e4:	6013      	str	r3, [r2, #0]
*pPortBModeLowReg	|=0x22222F22;	//set	PB1;	PB3;PB4;PB5;PB6;PB7;
 80001e6:	69bb      	ldr	r3, [r7, #24]
 80001e8:	681b      	ldr	r3, [r3, #0]
 80001ea:	f043 3322 	orr.w	r3, r3, #572662306	; 0x22222222
 80001ee:	f443 6350 	orr.w	r3, r3, #3328	; 0xd00
 80001f2:	69ba      	ldr	r2, [r7, #24]
 80001f4:	6013      	str	r3, [r2, #0]

*pPortBModeHighReg	&=0x22222222;	//clear	PB8;PB9;PB10;PB11;PB12;PB13;PB14;PB15.
 80001f6:	697b      	ldr	r3, [r7, #20]
 80001f8:	681b      	ldr	r3, [r3, #0]
 80001fa:	f003 3222 	and.w	r2, r3, #572662306	; 0x22222222
 80001fe:	697b      	ldr	r3, [r7, #20]
 8000200:	601a      	str	r2, [r3, #0]
*pPortBModeHighReg	|=0x22222222;	//set	PB8;PB9;PB10;PB11;PB12;PB13;PB14;PB15.
 8000202:	697b      	ldr	r3, [r7, #20]
 8000204:	681b      	ldr	r3, [r3, #0]
 8000206:	f043 3222 	orr.w	r2, r3, #572662306	; 0x22222222
 800020a:	697b      	ldr	r3, [r7, #20]
 800020c:	601a      	str	r2, [r3, #0]
//Configure Mode of PORTC
//no pins on PCB
//*pPortCModeLowReg	&=0x222FFFFF;	//clear
//*pPortCModeLowReg	|=0x22200000;	//set

*pPortCModeHighReg	&=0x222FFFFF;	//clear	PC13;PC14;PC15
 800020e:	693b      	ldr	r3, [r7, #16]
 8000210:	681b      	ldr	r3, [r3, #0]
 8000212:	f023 435d 	bic.w	r3, r3, #3707764736	; 0xdd000000
 8000216:	f423 0350 	bic.w	r3, r3, #13631488	; 0xd00000
 800021a:	693a      	ldr	r2, [r7, #16]
 800021c:	6013      	str	r3, [r2, #0]
*pPortCModeHighReg	|=0x22200000;	//set	PC13;PC14;PC15
 800021e:	693b      	ldr	r3, [r7, #16]
 8000220:	681b      	ldr	r3, [r3, #0]
 8000222:	f043 5308 	orr.w	r3, r3, #570425344	; 0x22000000
 8000226:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800022a:	693a      	ldr	r2, [r7, #16]
 800022c:	6013      	str	r3, [r2, #0]


//Configure PC13 as low
*pPortCOutReg	&=0xFFFFDFFF;	//set	PC13 as low (enable LED)
 800022e:	687b      	ldr	r3, [r7, #4]
 8000230:	681b      	ldr	r3, [r3, #0]
 8000232:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 8000236:	687b      	ldr	r3, [r7, #4]
 8000238:	601a      	str	r2, [r3, #0]
*pPortCOutReg	|=0x2000;		//set	PC13 as high (disable LED)
 800023a:	687b      	ldr	r3, [r7, #4]
 800023c:	681b      	ldr	r3, [r3, #0]
 800023e:	f443 5200 	orr.w	r2, r3, #8192	; 0x2000
 8000242:	687b      	ldr	r3, [r7, #4]
 8000244:	601a      	str	r2, [r3, #0]

	initialise_monitor_handles();
 8000246:	f000 f83f 	bl	80002c8 <initialise_monitor_handles>
	printf("Hello World\n");
 800024a:	481d      	ldr	r0, [pc, #116]	; (80002c0 <main+0x150>)
 800024c:	f000 f99a 	bl	8000584 <puts>
	/* Loop forever */
while(1){
//turn ONN the LED
	*pPortCOutReg	&=0xFFFFDFFF;	//set	PC13 as low (enable LED)
 8000250:	687b      	ldr	r3, [r7, #4]
 8000252:	681b      	ldr	r3, [r3, #0]
 8000254:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 8000258:	687b      	ldr	r3, [r7, #4]
 800025a:	601a      	str	r2, [r3, #0]
	for(uint32_t i=0; i<500000; i++);
 800025c:	2300      	movs	r3, #0
 800025e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8000260:	e002      	b.n	8000268 <main+0xf8>
 8000262:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8000264:	3301      	adds	r3, #1
 8000266:	62fb      	str	r3, [r7, #44]	; 0x2c
 8000268:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800026a:	4a16      	ldr	r2, [pc, #88]	; (80002c4 <main+0x154>)
 800026c:	4293      	cmp	r3, r2
 800026e:	d9f8      	bls.n	8000262 <main+0xf2>
//turn OFF LED
	*pPortCOutReg	|=0x2000;		//set	PC13 as high (disable LED)
 8000270:	687b      	ldr	r3, [r7, #4]
 8000272:	681b      	ldr	r3, [r3, #0]
 8000274:	f443 5200 	orr.w	r2, r3, #8192	; 0x2000
 8000278:	687b      	ldr	r3, [r7, #4]
 800027a:	601a      	str	r2, [r3, #0]
	for(uint32_t i=0; i<500000; i++);
 800027c:	2300      	movs	r3, #0
 800027e:	62bb      	str	r3, [r7, #40]	; 0x28
 8000280:	e002      	b.n	8000288 <main+0x118>
 8000282:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8000284:	3301      	adds	r3, #1
 8000286:	62bb      	str	r3, [r7, #40]	; 0x28
 8000288:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800028a:	4a0e      	ldr	r2, [pc, #56]	; (80002c4 <main+0x154>)
 800028c:	4293      	cmp	r3, r2
 800028e:	d9f8      	bls.n	8000282 <main+0x112>
	*pPortCOutReg	&=0xFFFFDFFF;	//set	PC13 as low (enable LED)
 8000290:	e7de      	b.n	8000250 <main+0xe0>
 8000292:	bf00      	nop
 8000294:	40021018 	.word	0x40021018
 8000298:	40010800 	.word	0x40010800
 800029c:	40010804 	.word	0x40010804
 80002a0:	40010c00 	.word	0x40010c00
 80002a4:	40010c04 	.word	0x40010c04
 80002a8:	40011004 	.word	0x40011004
 80002ac:	4001080c 	.word	0x4001080c
 80002b0:	40010c0c 	.word	0x40010c0c
 80002b4:	4001100c 	.word	0x4001100c
 80002b8:	2ff22222 	.word	0x2ff22222
 80002bc:	22222f22 	.word	0x22222f22
 80002c0:	08000db0 	.word	0x08000db0
 80002c4:	0007a11f 	.word	0x0007a11f

080002c8 <initialise_monitor_handles>:
char **environ = __env;


/* Functions */
void initialise_monitor_handles()
{
 80002c8:	b480      	push	{r7}
 80002ca:	af00      	add	r7, sp, #0
}
 80002cc:	bf00      	nop
 80002ce:	46bd      	mov	sp, r7
 80002d0:	bc80      	pop	{r7}
 80002d2:	4770      	bx	lr

080002d4 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80002d4:	b580      	push	{r7, lr}
 80002d6:	b086      	sub	sp, #24
 80002d8:	af00      	add	r7, sp, #0
 80002da:	60f8      	str	r0, [r7, #12]
 80002dc:	60b9      	str	r1, [r7, #8]
 80002de:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002e0:	2300      	movs	r3, #0
 80002e2:	617b      	str	r3, [r7, #20]
 80002e4:	e00a      	b.n	80002fc <_read+0x28>
	{
		*ptr++ = __io_getchar();
 80002e6:	f3af 8000 	nop.w
 80002ea:	4601      	mov	r1, r0
 80002ec:	68bb      	ldr	r3, [r7, #8]
 80002ee:	1c5a      	adds	r2, r3, #1
 80002f0:	60ba      	str	r2, [r7, #8]
 80002f2:	b2ca      	uxtb	r2, r1
 80002f4:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002f6:	697b      	ldr	r3, [r7, #20]
 80002f8:	3301      	adds	r3, #1
 80002fa:	617b      	str	r3, [r7, #20]
 80002fc:	697a      	ldr	r2, [r7, #20]
 80002fe:	687b      	ldr	r3, [r7, #4]
 8000300:	429a      	cmp	r2, r3
 8000302:	dbf0      	blt.n	80002e6 <_read+0x12>
	}

return len;
 8000304:	687b      	ldr	r3, [r7, #4]
}
 8000306:	4618      	mov	r0, r3
 8000308:	3718      	adds	r7, #24
 800030a:	46bd      	mov	sp, r7
 800030c:	bd80      	pop	{r7, pc}

0800030e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800030e:	b580      	push	{r7, lr}
 8000310:	b086      	sub	sp, #24
 8000312:	af00      	add	r7, sp, #0
 8000314:	60f8      	str	r0, [r7, #12]
 8000316:	60b9      	str	r1, [r7, #8]
 8000318:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800031a:	2300      	movs	r3, #0
 800031c:	617b      	str	r3, [r7, #20]
 800031e:	e009      	b.n	8000334 <_write+0x26>
	{
		__io_putchar(*ptr++);
 8000320:	68bb      	ldr	r3, [r7, #8]
 8000322:	1c5a      	adds	r2, r3, #1
 8000324:	60ba      	str	r2, [r7, #8]
 8000326:	781b      	ldrb	r3, [r3, #0]
 8000328:	4618      	mov	r0, r3
 800032a:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800032e:	697b      	ldr	r3, [r7, #20]
 8000330:	3301      	adds	r3, #1
 8000332:	617b      	str	r3, [r7, #20]
 8000334:	697a      	ldr	r2, [r7, #20]
 8000336:	687b      	ldr	r3, [r7, #4]
 8000338:	429a      	cmp	r2, r3
 800033a:	dbf1      	blt.n	8000320 <_write+0x12>
	}
	return len;
 800033c:	687b      	ldr	r3, [r7, #4]
}
 800033e:	4618      	mov	r0, r3
 8000340:	3718      	adds	r7, #24
 8000342:	46bd      	mov	sp, r7
 8000344:	bd80      	pop	{r7, pc}

08000346 <_close>:

int _close(int file)
{
 8000346:	b480      	push	{r7}
 8000348:	b083      	sub	sp, #12
 800034a:	af00      	add	r7, sp, #0
 800034c:	6078      	str	r0, [r7, #4]
	return -1;
 800034e:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000352:	4618      	mov	r0, r3
 8000354:	370c      	adds	r7, #12
 8000356:	46bd      	mov	sp, r7
 8000358:	bc80      	pop	{r7}
 800035a:	4770      	bx	lr

0800035c <_fstat>:


int _fstat(int file, struct stat *st)
{
 800035c:	b480      	push	{r7}
 800035e:	b083      	sub	sp, #12
 8000360:	af00      	add	r7, sp, #0
 8000362:	6078      	str	r0, [r7, #4]
 8000364:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8000366:	683b      	ldr	r3, [r7, #0]
 8000368:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800036c:	605a      	str	r2, [r3, #4]
	return 0;
 800036e:	2300      	movs	r3, #0
}
 8000370:	4618      	mov	r0, r3
 8000372:	370c      	adds	r7, #12
 8000374:	46bd      	mov	sp, r7
 8000376:	bc80      	pop	{r7}
 8000378:	4770      	bx	lr

0800037a <_isatty>:

int _isatty(int file)
{
 800037a:	b480      	push	{r7}
 800037c:	b083      	sub	sp, #12
 800037e:	af00      	add	r7, sp, #0
 8000380:	6078      	str	r0, [r7, #4]
	return 1;
 8000382:	2301      	movs	r3, #1
}
 8000384:	4618      	mov	r0, r3
 8000386:	370c      	adds	r7, #12
 8000388:	46bd      	mov	sp, r7
 800038a:	bc80      	pop	{r7}
 800038c:	4770      	bx	lr

0800038e <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800038e:	b480      	push	{r7}
 8000390:	b085      	sub	sp, #20
 8000392:	af00      	add	r7, sp, #0
 8000394:	60f8      	str	r0, [r7, #12]
 8000396:	60b9      	str	r1, [r7, #8]
 8000398:	607a      	str	r2, [r7, #4]
	return 0;
 800039a:	2300      	movs	r3, #0
}
 800039c:	4618      	mov	r0, r3
 800039e:	3714      	adds	r7, #20
 80003a0:	46bd      	mov	sp, r7
 80003a2:	bc80      	pop	{r7}
 80003a4:	4770      	bx	lr
	...

080003a8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80003a8:	b580      	push	{r7, lr}
 80003aa:	b086      	sub	sp, #24
 80003ac:	af00      	add	r7, sp, #0
 80003ae:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80003b0:	4a14      	ldr	r2, [pc, #80]	; (8000404 <_sbrk+0x5c>)
 80003b2:	4b15      	ldr	r3, [pc, #84]	; (8000408 <_sbrk+0x60>)
 80003b4:	1ad3      	subs	r3, r2, r3
 80003b6:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80003b8:	697b      	ldr	r3, [r7, #20]
 80003ba:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80003bc:	4b13      	ldr	r3, [pc, #76]	; (800040c <_sbrk+0x64>)
 80003be:	681b      	ldr	r3, [r3, #0]
 80003c0:	2b00      	cmp	r3, #0
 80003c2:	d102      	bne.n	80003ca <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80003c4:	4b11      	ldr	r3, [pc, #68]	; (800040c <_sbrk+0x64>)
 80003c6:	4a12      	ldr	r2, [pc, #72]	; (8000410 <_sbrk+0x68>)
 80003c8:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80003ca:	4b10      	ldr	r3, [pc, #64]	; (800040c <_sbrk+0x64>)
 80003cc:	681a      	ldr	r2, [r3, #0]
 80003ce:	687b      	ldr	r3, [r7, #4]
 80003d0:	4413      	add	r3, r2
 80003d2:	693a      	ldr	r2, [r7, #16]
 80003d4:	429a      	cmp	r2, r3
 80003d6:	d207      	bcs.n	80003e8 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80003d8:	f000 f846 	bl	8000468 <__errno>
 80003dc:	4602      	mov	r2, r0
 80003de:	230c      	movs	r3, #12
 80003e0:	6013      	str	r3, [r2, #0]
    return (void *)-1;
 80003e2:	f04f 33ff 	mov.w	r3, #4294967295
 80003e6:	e009      	b.n	80003fc <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80003e8:	4b08      	ldr	r3, [pc, #32]	; (800040c <_sbrk+0x64>)
 80003ea:	681b      	ldr	r3, [r3, #0]
 80003ec:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80003ee:	4b07      	ldr	r3, [pc, #28]	; (800040c <_sbrk+0x64>)
 80003f0:	681a      	ldr	r2, [r3, #0]
 80003f2:	687b      	ldr	r3, [r7, #4]
 80003f4:	4413      	add	r3, r2
 80003f6:	4a05      	ldr	r2, [pc, #20]	; (800040c <_sbrk+0x64>)
 80003f8:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80003fa:	68fb      	ldr	r3, [r7, #12]
}
 80003fc:	4618      	mov	r0, r3
 80003fe:	3718      	adds	r7, #24
 8000400:	46bd      	mov	sp, r7
 8000402:	bd80      	pop	{r7, pc}
 8000404:	20005000 	.word	0x20005000
 8000408:	00000400 	.word	0x00000400
 800040c:	20000080 	.word	0x20000080
 8000410:	20000090 	.word	0x20000090

08000414 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000414:	480d      	ldr	r0, [pc, #52]	; (800044c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000416:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000418:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800041c:	480c      	ldr	r0, [pc, #48]	; (8000450 <LoopForever+0x6>)
  ldr r1, =_edata
 800041e:	490d      	ldr	r1, [pc, #52]	; (8000454 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000420:	4a0d      	ldr	r2, [pc, #52]	; (8000458 <LoopForever+0xe>)
  movs r3, #0
 8000422:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000424:	e002      	b.n	800042c <LoopCopyDataInit>

08000426 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000426:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000428:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800042a:	3304      	adds	r3, #4

0800042c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800042c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800042e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000430:	d3f9      	bcc.n	8000426 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000432:	4a0a      	ldr	r2, [pc, #40]	; (800045c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000434:	4c0a      	ldr	r4, [pc, #40]	; (8000460 <LoopForever+0x16>)
  movs r3, #0
 8000436:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000438:	e001      	b.n	800043e <LoopFillZerobss>

0800043a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800043a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800043c:	3204      	adds	r2, #4

0800043e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800043e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000440:	d3fb      	bcc.n	800043a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000442:	f000 f817 	bl	8000474 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000446:	f7ff fe93 	bl	8000170 <main>

0800044a <LoopForever>:

LoopForever:
    b LoopForever
 800044a:	e7fe      	b.n	800044a <LoopForever>
  ldr   r0, =_estack
 800044c:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 8000450:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000454:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 8000458:	08000e28 	.word	0x08000e28
  ldr r2, =_sbss
 800045c:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 8000460:	20000090 	.word	0x20000090

08000464 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000464:	e7fe      	b.n	8000464 <ADC1_2_IRQHandler>
	...

08000468 <__errno>:
 8000468:	4b01      	ldr	r3, [pc, #4]	; (8000470 <__errno+0x8>)
 800046a:	6818      	ldr	r0, [r3, #0]
 800046c:	4770      	bx	lr
 800046e:	bf00      	nop
 8000470:	20000000 	.word	0x20000000

08000474 <__libc_init_array>:
 8000474:	b570      	push	{r4, r5, r6, lr}
 8000476:	2500      	movs	r5, #0
 8000478:	4e0c      	ldr	r6, [pc, #48]	; (80004ac <__libc_init_array+0x38>)
 800047a:	4c0d      	ldr	r4, [pc, #52]	; (80004b0 <__libc_init_array+0x3c>)
 800047c:	1ba4      	subs	r4, r4, r6
 800047e:	10a4      	asrs	r4, r4, #2
 8000480:	42a5      	cmp	r5, r4
 8000482:	d109      	bne.n	8000498 <__libc_init_array+0x24>
 8000484:	f000 fc88 	bl	8000d98 <_init>
 8000488:	2500      	movs	r5, #0
 800048a:	4e0a      	ldr	r6, [pc, #40]	; (80004b4 <__libc_init_array+0x40>)
 800048c:	4c0a      	ldr	r4, [pc, #40]	; (80004b8 <__libc_init_array+0x44>)
 800048e:	1ba4      	subs	r4, r4, r6
 8000490:	10a4      	asrs	r4, r4, #2
 8000492:	42a5      	cmp	r5, r4
 8000494:	d105      	bne.n	80004a2 <__libc_init_array+0x2e>
 8000496:	bd70      	pop	{r4, r5, r6, pc}
 8000498:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800049c:	4798      	blx	r3
 800049e:	3501      	adds	r5, #1
 80004a0:	e7ee      	b.n	8000480 <__libc_init_array+0xc>
 80004a2:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80004a6:	4798      	blx	r3
 80004a8:	3501      	adds	r5, #1
 80004aa:	e7f2      	b.n	8000492 <__libc_init_array+0x1e>
 80004ac:	08000e20 	.word	0x08000e20
 80004b0:	08000e20 	.word	0x08000e20
 80004b4:	08000e20 	.word	0x08000e20
 80004b8:	08000e24 	.word	0x08000e24

080004bc <memset>:
 80004bc:	4603      	mov	r3, r0
 80004be:	4402      	add	r2, r0
 80004c0:	4293      	cmp	r3, r2
 80004c2:	d100      	bne.n	80004c6 <memset+0xa>
 80004c4:	4770      	bx	lr
 80004c6:	f803 1b01 	strb.w	r1, [r3], #1
 80004ca:	e7f9      	b.n	80004c0 <memset+0x4>

080004cc <_puts_r>:
 80004cc:	b570      	push	{r4, r5, r6, lr}
 80004ce:	460e      	mov	r6, r1
 80004d0:	4605      	mov	r5, r0
 80004d2:	b118      	cbz	r0, 80004dc <_puts_r+0x10>
 80004d4:	6983      	ldr	r3, [r0, #24]
 80004d6:	b90b      	cbnz	r3, 80004dc <_puts_r+0x10>
 80004d8:	f000 fa0c 	bl	80008f4 <__sinit>
 80004dc:	69ab      	ldr	r3, [r5, #24]
 80004de:	68ac      	ldr	r4, [r5, #8]
 80004e0:	b913      	cbnz	r3, 80004e8 <_puts_r+0x1c>
 80004e2:	4628      	mov	r0, r5
 80004e4:	f000 fa06 	bl	80008f4 <__sinit>
 80004e8:	4b23      	ldr	r3, [pc, #140]	; (8000578 <_puts_r+0xac>)
 80004ea:	429c      	cmp	r4, r3
 80004ec:	d117      	bne.n	800051e <_puts_r+0x52>
 80004ee:	686c      	ldr	r4, [r5, #4]
 80004f0:	89a3      	ldrh	r3, [r4, #12]
 80004f2:	071b      	lsls	r3, r3, #28
 80004f4:	d51d      	bpl.n	8000532 <_puts_r+0x66>
 80004f6:	6923      	ldr	r3, [r4, #16]
 80004f8:	b1db      	cbz	r3, 8000532 <_puts_r+0x66>
 80004fa:	3e01      	subs	r6, #1
 80004fc:	68a3      	ldr	r3, [r4, #8]
 80004fe:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000502:	3b01      	subs	r3, #1
 8000504:	60a3      	str	r3, [r4, #8]
 8000506:	b9e9      	cbnz	r1, 8000544 <_puts_r+0x78>
 8000508:	2b00      	cmp	r3, #0
 800050a:	da2e      	bge.n	800056a <_puts_r+0x9e>
 800050c:	4622      	mov	r2, r4
 800050e:	210a      	movs	r1, #10
 8000510:	4628      	mov	r0, r5
 8000512:	f000 f83f 	bl	8000594 <__swbuf_r>
 8000516:	3001      	adds	r0, #1
 8000518:	d011      	beq.n	800053e <_puts_r+0x72>
 800051a:	200a      	movs	r0, #10
 800051c:	e011      	b.n	8000542 <_puts_r+0x76>
 800051e:	4b17      	ldr	r3, [pc, #92]	; (800057c <_puts_r+0xb0>)
 8000520:	429c      	cmp	r4, r3
 8000522:	d101      	bne.n	8000528 <_puts_r+0x5c>
 8000524:	68ac      	ldr	r4, [r5, #8]
 8000526:	e7e3      	b.n	80004f0 <_puts_r+0x24>
 8000528:	4b15      	ldr	r3, [pc, #84]	; (8000580 <_puts_r+0xb4>)
 800052a:	429c      	cmp	r4, r3
 800052c:	bf08      	it	eq
 800052e:	68ec      	ldreq	r4, [r5, #12]
 8000530:	e7de      	b.n	80004f0 <_puts_r+0x24>
 8000532:	4621      	mov	r1, r4
 8000534:	4628      	mov	r0, r5
 8000536:	f000 f87f 	bl	8000638 <__swsetup_r>
 800053a:	2800      	cmp	r0, #0
 800053c:	d0dd      	beq.n	80004fa <_puts_r+0x2e>
 800053e:	f04f 30ff 	mov.w	r0, #4294967295
 8000542:	bd70      	pop	{r4, r5, r6, pc}
 8000544:	2b00      	cmp	r3, #0
 8000546:	da04      	bge.n	8000552 <_puts_r+0x86>
 8000548:	69a2      	ldr	r2, [r4, #24]
 800054a:	429a      	cmp	r2, r3
 800054c:	dc06      	bgt.n	800055c <_puts_r+0x90>
 800054e:	290a      	cmp	r1, #10
 8000550:	d004      	beq.n	800055c <_puts_r+0x90>
 8000552:	6823      	ldr	r3, [r4, #0]
 8000554:	1c5a      	adds	r2, r3, #1
 8000556:	6022      	str	r2, [r4, #0]
 8000558:	7019      	strb	r1, [r3, #0]
 800055a:	e7cf      	b.n	80004fc <_puts_r+0x30>
 800055c:	4622      	mov	r2, r4
 800055e:	4628      	mov	r0, r5
 8000560:	f000 f818 	bl	8000594 <__swbuf_r>
 8000564:	3001      	adds	r0, #1
 8000566:	d1c9      	bne.n	80004fc <_puts_r+0x30>
 8000568:	e7e9      	b.n	800053e <_puts_r+0x72>
 800056a:	200a      	movs	r0, #10
 800056c:	6823      	ldr	r3, [r4, #0]
 800056e:	1c5a      	adds	r2, r3, #1
 8000570:	6022      	str	r2, [r4, #0]
 8000572:	7018      	strb	r0, [r3, #0]
 8000574:	e7e5      	b.n	8000542 <_puts_r+0x76>
 8000576:	bf00      	nop
 8000578:	08000de0 	.word	0x08000de0
 800057c:	08000e00 	.word	0x08000e00
 8000580:	08000dc0 	.word	0x08000dc0

08000584 <puts>:
 8000584:	4b02      	ldr	r3, [pc, #8]	; (8000590 <puts+0xc>)
 8000586:	4601      	mov	r1, r0
 8000588:	6818      	ldr	r0, [r3, #0]
 800058a:	f7ff bf9f 	b.w	80004cc <_puts_r>
 800058e:	bf00      	nop
 8000590:	20000000 	.word	0x20000000

08000594 <__swbuf_r>:
 8000594:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000596:	460e      	mov	r6, r1
 8000598:	4614      	mov	r4, r2
 800059a:	4605      	mov	r5, r0
 800059c:	b118      	cbz	r0, 80005a6 <__swbuf_r+0x12>
 800059e:	6983      	ldr	r3, [r0, #24]
 80005a0:	b90b      	cbnz	r3, 80005a6 <__swbuf_r+0x12>
 80005a2:	f000 f9a7 	bl	80008f4 <__sinit>
 80005a6:	4b21      	ldr	r3, [pc, #132]	; (800062c <__swbuf_r+0x98>)
 80005a8:	429c      	cmp	r4, r3
 80005aa:	d12a      	bne.n	8000602 <__swbuf_r+0x6e>
 80005ac:	686c      	ldr	r4, [r5, #4]
 80005ae:	69a3      	ldr	r3, [r4, #24]
 80005b0:	60a3      	str	r3, [r4, #8]
 80005b2:	89a3      	ldrh	r3, [r4, #12]
 80005b4:	071a      	lsls	r2, r3, #28
 80005b6:	d52e      	bpl.n	8000616 <__swbuf_r+0x82>
 80005b8:	6923      	ldr	r3, [r4, #16]
 80005ba:	b363      	cbz	r3, 8000616 <__swbuf_r+0x82>
 80005bc:	6923      	ldr	r3, [r4, #16]
 80005be:	6820      	ldr	r0, [r4, #0]
 80005c0:	b2f6      	uxtb	r6, r6
 80005c2:	1ac0      	subs	r0, r0, r3
 80005c4:	6963      	ldr	r3, [r4, #20]
 80005c6:	4637      	mov	r7, r6
 80005c8:	4283      	cmp	r3, r0
 80005ca:	dc04      	bgt.n	80005d6 <__swbuf_r+0x42>
 80005cc:	4621      	mov	r1, r4
 80005ce:	4628      	mov	r0, r5
 80005d0:	f000 f926 	bl	8000820 <_fflush_r>
 80005d4:	bb28      	cbnz	r0, 8000622 <__swbuf_r+0x8e>
 80005d6:	68a3      	ldr	r3, [r4, #8]
 80005d8:	3001      	adds	r0, #1
 80005da:	3b01      	subs	r3, #1
 80005dc:	60a3      	str	r3, [r4, #8]
 80005de:	6823      	ldr	r3, [r4, #0]
 80005e0:	1c5a      	adds	r2, r3, #1
 80005e2:	6022      	str	r2, [r4, #0]
 80005e4:	701e      	strb	r6, [r3, #0]
 80005e6:	6963      	ldr	r3, [r4, #20]
 80005e8:	4283      	cmp	r3, r0
 80005ea:	d004      	beq.n	80005f6 <__swbuf_r+0x62>
 80005ec:	89a3      	ldrh	r3, [r4, #12]
 80005ee:	07db      	lsls	r3, r3, #31
 80005f0:	d519      	bpl.n	8000626 <__swbuf_r+0x92>
 80005f2:	2e0a      	cmp	r6, #10
 80005f4:	d117      	bne.n	8000626 <__swbuf_r+0x92>
 80005f6:	4621      	mov	r1, r4
 80005f8:	4628      	mov	r0, r5
 80005fa:	f000 f911 	bl	8000820 <_fflush_r>
 80005fe:	b190      	cbz	r0, 8000626 <__swbuf_r+0x92>
 8000600:	e00f      	b.n	8000622 <__swbuf_r+0x8e>
 8000602:	4b0b      	ldr	r3, [pc, #44]	; (8000630 <__swbuf_r+0x9c>)
 8000604:	429c      	cmp	r4, r3
 8000606:	d101      	bne.n	800060c <__swbuf_r+0x78>
 8000608:	68ac      	ldr	r4, [r5, #8]
 800060a:	e7d0      	b.n	80005ae <__swbuf_r+0x1a>
 800060c:	4b09      	ldr	r3, [pc, #36]	; (8000634 <__swbuf_r+0xa0>)
 800060e:	429c      	cmp	r4, r3
 8000610:	bf08      	it	eq
 8000612:	68ec      	ldreq	r4, [r5, #12]
 8000614:	e7cb      	b.n	80005ae <__swbuf_r+0x1a>
 8000616:	4621      	mov	r1, r4
 8000618:	4628      	mov	r0, r5
 800061a:	f000 f80d 	bl	8000638 <__swsetup_r>
 800061e:	2800      	cmp	r0, #0
 8000620:	d0cc      	beq.n	80005bc <__swbuf_r+0x28>
 8000622:	f04f 37ff 	mov.w	r7, #4294967295
 8000626:	4638      	mov	r0, r7
 8000628:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800062a:	bf00      	nop
 800062c:	08000de0 	.word	0x08000de0
 8000630:	08000e00 	.word	0x08000e00
 8000634:	08000dc0 	.word	0x08000dc0

08000638 <__swsetup_r>:
 8000638:	4b32      	ldr	r3, [pc, #200]	; (8000704 <__swsetup_r+0xcc>)
 800063a:	b570      	push	{r4, r5, r6, lr}
 800063c:	681d      	ldr	r5, [r3, #0]
 800063e:	4606      	mov	r6, r0
 8000640:	460c      	mov	r4, r1
 8000642:	b125      	cbz	r5, 800064e <__swsetup_r+0x16>
 8000644:	69ab      	ldr	r3, [r5, #24]
 8000646:	b913      	cbnz	r3, 800064e <__swsetup_r+0x16>
 8000648:	4628      	mov	r0, r5
 800064a:	f000 f953 	bl	80008f4 <__sinit>
 800064e:	4b2e      	ldr	r3, [pc, #184]	; (8000708 <__swsetup_r+0xd0>)
 8000650:	429c      	cmp	r4, r3
 8000652:	d10f      	bne.n	8000674 <__swsetup_r+0x3c>
 8000654:	686c      	ldr	r4, [r5, #4]
 8000656:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800065a:	b29a      	uxth	r2, r3
 800065c:	0715      	lsls	r5, r2, #28
 800065e:	d42c      	bmi.n	80006ba <__swsetup_r+0x82>
 8000660:	06d0      	lsls	r0, r2, #27
 8000662:	d411      	bmi.n	8000688 <__swsetup_r+0x50>
 8000664:	2209      	movs	r2, #9
 8000666:	6032      	str	r2, [r6, #0]
 8000668:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800066c:	81a3      	strh	r3, [r4, #12]
 800066e:	f04f 30ff 	mov.w	r0, #4294967295
 8000672:	e03e      	b.n	80006f2 <__swsetup_r+0xba>
 8000674:	4b25      	ldr	r3, [pc, #148]	; (800070c <__swsetup_r+0xd4>)
 8000676:	429c      	cmp	r4, r3
 8000678:	d101      	bne.n	800067e <__swsetup_r+0x46>
 800067a:	68ac      	ldr	r4, [r5, #8]
 800067c:	e7eb      	b.n	8000656 <__swsetup_r+0x1e>
 800067e:	4b24      	ldr	r3, [pc, #144]	; (8000710 <__swsetup_r+0xd8>)
 8000680:	429c      	cmp	r4, r3
 8000682:	bf08      	it	eq
 8000684:	68ec      	ldreq	r4, [r5, #12]
 8000686:	e7e6      	b.n	8000656 <__swsetup_r+0x1e>
 8000688:	0751      	lsls	r1, r2, #29
 800068a:	d512      	bpl.n	80006b2 <__swsetup_r+0x7a>
 800068c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800068e:	b141      	cbz	r1, 80006a2 <__swsetup_r+0x6a>
 8000690:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000694:	4299      	cmp	r1, r3
 8000696:	d002      	beq.n	800069e <__swsetup_r+0x66>
 8000698:	4630      	mov	r0, r6
 800069a:	f000 fa19 	bl	8000ad0 <_free_r>
 800069e:	2300      	movs	r3, #0
 80006a0:	6363      	str	r3, [r4, #52]	; 0x34
 80006a2:	89a3      	ldrh	r3, [r4, #12]
 80006a4:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80006a8:	81a3      	strh	r3, [r4, #12]
 80006aa:	2300      	movs	r3, #0
 80006ac:	6063      	str	r3, [r4, #4]
 80006ae:	6923      	ldr	r3, [r4, #16]
 80006b0:	6023      	str	r3, [r4, #0]
 80006b2:	89a3      	ldrh	r3, [r4, #12]
 80006b4:	f043 0308 	orr.w	r3, r3, #8
 80006b8:	81a3      	strh	r3, [r4, #12]
 80006ba:	6923      	ldr	r3, [r4, #16]
 80006bc:	b94b      	cbnz	r3, 80006d2 <__swsetup_r+0x9a>
 80006be:	89a3      	ldrh	r3, [r4, #12]
 80006c0:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80006c4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80006c8:	d003      	beq.n	80006d2 <__swsetup_r+0x9a>
 80006ca:	4621      	mov	r1, r4
 80006cc:	4630      	mov	r0, r6
 80006ce:	f000 f9bf 	bl	8000a50 <__smakebuf_r>
 80006d2:	89a2      	ldrh	r2, [r4, #12]
 80006d4:	f012 0301 	ands.w	r3, r2, #1
 80006d8:	d00c      	beq.n	80006f4 <__swsetup_r+0xbc>
 80006da:	2300      	movs	r3, #0
 80006dc:	60a3      	str	r3, [r4, #8]
 80006de:	6963      	ldr	r3, [r4, #20]
 80006e0:	425b      	negs	r3, r3
 80006e2:	61a3      	str	r3, [r4, #24]
 80006e4:	6923      	ldr	r3, [r4, #16]
 80006e6:	b953      	cbnz	r3, 80006fe <__swsetup_r+0xc6>
 80006e8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80006ec:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 80006f0:	d1ba      	bne.n	8000668 <__swsetup_r+0x30>
 80006f2:	bd70      	pop	{r4, r5, r6, pc}
 80006f4:	0792      	lsls	r2, r2, #30
 80006f6:	bf58      	it	pl
 80006f8:	6963      	ldrpl	r3, [r4, #20]
 80006fa:	60a3      	str	r3, [r4, #8]
 80006fc:	e7f2      	b.n	80006e4 <__swsetup_r+0xac>
 80006fe:	2000      	movs	r0, #0
 8000700:	e7f7      	b.n	80006f2 <__swsetup_r+0xba>
 8000702:	bf00      	nop
 8000704:	20000000 	.word	0x20000000
 8000708:	08000de0 	.word	0x08000de0
 800070c:	08000e00 	.word	0x08000e00
 8000710:	08000dc0 	.word	0x08000dc0

08000714 <__sflush_r>:
 8000714:	898a      	ldrh	r2, [r1, #12]
 8000716:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800071a:	4605      	mov	r5, r0
 800071c:	0710      	lsls	r0, r2, #28
 800071e:	460c      	mov	r4, r1
 8000720:	d458      	bmi.n	80007d4 <__sflush_r+0xc0>
 8000722:	684b      	ldr	r3, [r1, #4]
 8000724:	2b00      	cmp	r3, #0
 8000726:	dc05      	bgt.n	8000734 <__sflush_r+0x20>
 8000728:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800072a:	2b00      	cmp	r3, #0
 800072c:	dc02      	bgt.n	8000734 <__sflush_r+0x20>
 800072e:	2000      	movs	r0, #0
 8000730:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000734:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000736:	2e00      	cmp	r6, #0
 8000738:	d0f9      	beq.n	800072e <__sflush_r+0x1a>
 800073a:	2300      	movs	r3, #0
 800073c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000740:	682f      	ldr	r7, [r5, #0]
 8000742:	6a21      	ldr	r1, [r4, #32]
 8000744:	602b      	str	r3, [r5, #0]
 8000746:	d032      	beq.n	80007ae <__sflush_r+0x9a>
 8000748:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800074a:	89a3      	ldrh	r3, [r4, #12]
 800074c:	075a      	lsls	r2, r3, #29
 800074e:	d505      	bpl.n	800075c <__sflush_r+0x48>
 8000750:	6863      	ldr	r3, [r4, #4]
 8000752:	1ac0      	subs	r0, r0, r3
 8000754:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000756:	b10b      	cbz	r3, 800075c <__sflush_r+0x48>
 8000758:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800075a:	1ac0      	subs	r0, r0, r3
 800075c:	2300      	movs	r3, #0
 800075e:	4602      	mov	r2, r0
 8000760:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000762:	6a21      	ldr	r1, [r4, #32]
 8000764:	4628      	mov	r0, r5
 8000766:	47b0      	blx	r6
 8000768:	1c43      	adds	r3, r0, #1
 800076a:	89a3      	ldrh	r3, [r4, #12]
 800076c:	d106      	bne.n	800077c <__sflush_r+0x68>
 800076e:	6829      	ldr	r1, [r5, #0]
 8000770:	291d      	cmp	r1, #29
 8000772:	d848      	bhi.n	8000806 <__sflush_r+0xf2>
 8000774:	4a29      	ldr	r2, [pc, #164]	; (800081c <__sflush_r+0x108>)
 8000776:	40ca      	lsrs	r2, r1
 8000778:	07d6      	lsls	r6, r2, #31
 800077a:	d544      	bpl.n	8000806 <__sflush_r+0xf2>
 800077c:	2200      	movs	r2, #0
 800077e:	6062      	str	r2, [r4, #4]
 8000780:	6922      	ldr	r2, [r4, #16]
 8000782:	04d9      	lsls	r1, r3, #19
 8000784:	6022      	str	r2, [r4, #0]
 8000786:	d504      	bpl.n	8000792 <__sflush_r+0x7e>
 8000788:	1c42      	adds	r2, r0, #1
 800078a:	d101      	bne.n	8000790 <__sflush_r+0x7c>
 800078c:	682b      	ldr	r3, [r5, #0]
 800078e:	b903      	cbnz	r3, 8000792 <__sflush_r+0x7e>
 8000790:	6560      	str	r0, [r4, #84]	; 0x54
 8000792:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000794:	602f      	str	r7, [r5, #0]
 8000796:	2900      	cmp	r1, #0
 8000798:	d0c9      	beq.n	800072e <__sflush_r+0x1a>
 800079a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800079e:	4299      	cmp	r1, r3
 80007a0:	d002      	beq.n	80007a8 <__sflush_r+0x94>
 80007a2:	4628      	mov	r0, r5
 80007a4:	f000 f994 	bl	8000ad0 <_free_r>
 80007a8:	2000      	movs	r0, #0
 80007aa:	6360      	str	r0, [r4, #52]	; 0x34
 80007ac:	e7c0      	b.n	8000730 <__sflush_r+0x1c>
 80007ae:	2301      	movs	r3, #1
 80007b0:	4628      	mov	r0, r5
 80007b2:	47b0      	blx	r6
 80007b4:	1c41      	adds	r1, r0, #1
 80007b6:	d1c8      	bne.n	800074a <__sflush_r+0x36>
 80007b8:	682b      	ldr	r3, [r5, #0]
 80007ba:	2b00      	cmp	r3, #0
 80007bc:	d0c5      	beq.n	800074a <__sflush_r+0x36>
 80007be:	2b1d      	cmp	r3, #29
 80007c0:	d001      	beq.n	80007c6 <__sflush_r+0xb2>
 80007c2:	2b16      	cmp	r3, #22
 80007c4:	d101      	bne.n	80007ca <__sflush_r+0xb6>
 80007c6:	602f      	str	r7, [r5, #0]
 80007c8:	e7b1      	b.n	800072e <__sflush_r+0x1a>
 80007ca:	89a3      	ldrh	r3, [r4, #12]
 80007cc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80007d0:	81a3      	strh	r3, [r4, #12]
 80007d2:	e7ad      	b.n	8000730 <__sflush_r+0x1c>
 80007d4:	690f      	ldr	r7, [r1, #16]
 80007d6:	2f00      	cmp	r7, #0
 80007d8:	d0a9      	beq.n	800072e <__sflush_r+0x1a>
 80007da:	0793      	lsls	r3, r2, #30
 80007dc:	bf18      	it	ne
 80007de:	2300      	movne	r3, #0
 80007e0:	680e      	ldr	r6, [r1, #0]
 80007e2:	bf08      	it	eq
 80007e4:	694b      	ldreq	r3, [r1, #20]
 80007e6:	eba6 0807 	sub.w	r8, r6, r7
 80007ea:	600f      	str	r7, [r1, #0]
 80007ec:	608b      	str	r3, [r1, #8]
 80007ee:	f1b8 0f00 	cmp.w	r8, #0
 80007f2:	dd9c      	ble.n	800072e <__sflush_r+0x1a>
 80007f4:	4643      	mov	r3, r8
 80007f6:	463a      	mov	r2, r7
 80007f8:	6a21      	ldr	r1, [r4, #32]
 80007fa:	4628      	mov	r0, r5
 80007fc:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80007fe:	47b0      	blx	r6
 8000800:	2800      	cmp	r0, #0
 8000802:	dc06      	bgt.n	8000812 <__sflush_r+0xfe>
 8000804:	89a3      	ldrh	r3, [r4, #12]
 8000806:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800080a:	81a3      	strh	r3, [r4, #12]
 800080c:	f04f 30ff 	mov.w	r0, #4294967295
 8000810:	e78e      	b.n	8000730 <__sflush_r+0x1c>
 8000812:	4407      	add	r7, r0
 8000814:	eba8 0800 	sub.w	r8, r8, r0
 8000818:	e7e9      	b.n	80007ee <__sflush_r+0xda>
 800081a:	bf00      	nop
 800081c:	20400001 	.word	0x20400001

08000820 <_fflush_r>:
 8000820:	b538      	push	{r3, r4, r5, lr}
 8000822:	690b      	ldr	r3, [r1, #16]
 8000824:	4605      	mov	r5, r0
 8000826:	460c      	mov	r4, r1
 8000828:	b1db      	cbz	r3, 8000862 <_fflush_r+0x42>
 800082a:	b118      	cbz	r0, 8000834 <_fflush_r+0x14>
 800082c:	6983      	ldr	r3, [r0, #24]
 800082e:	b90b      	cbnz	r3, 8000834 <_fflush_r+0x14>
 8000830:	f000 f860 	bl	80008f4 <__sinit>
 8000834:	4b0c      	ldr	r3, [pc, #48]	; (8000868 <_fflush_r+0x48>)
 8000836:	429c      	cmp	r4, r3
 8000838:	d109      	bne.n	800084e <_fflush_r+0x2e>
 800083a:	686c      	ldr	r4, [r5, #4]
 800083c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000840:	b17b      	cbz	r3, 8000862 <_fflush_r+0x42>
 8000842:	4621      	mov	r1, r4
 8000844:	4628      	mov	r0, r5
 8000846:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800084a:	f7ff bf63 	b.w	8000714 <__sflush_r>
 800084e:	4b07      	ldr	r3, [pc, #28]	; (800086c <_fflush_r+0x4c>)
 8000850:	429c      	cmp	r4, r3
 8000852:	d101      	bne.n	8000858 <_fflush_r+0x38>
 8000854:	68ac      	ldr	r4, [r5, #8]
 8000856:	e7f1      	b.n	800083c <_fflush_r+0x1c>
 8000858:	4b05      	ldr	r3, [pc, #20]	; (8000870 <_fflush_r+0x50>)
 800085a:	429c      	cmp	r4, r3
 800085c:	bf08      	it	eq
 800085e:	68ec      	ldreq	r4, [r5, #12]
 8000860:	e7ec      	b.n	800083c <_fflush_r+0x1c>
 8000862:	2000      	movs	r0, #0
 8000864:	bd38      	pop	{r3, r4, r5, pc}
 8000866:	bf00      	nop
 8000868:	08000de0 	.word	0x08000de0
 800086c:	08000e00 	.word	0x08000e00
 8000870:	08000dc0 	.word	0x08000dc0

08000874 <std>:
 8000874:	2300      	movs	r3, #0
 8000876:	b510      	push	{r4, lr}
 8000878:	4604      	mov	r4, r0
 800087a:	e9c0 3300 	strd	r3, r3, [r0]
 800087e:	6083      	str	r3, [r0, #8]
 8000880:	8181      	strh	r1, [r0, #12]
 8000882:	6643      	str	r3, [r0, #100]	; 0x64
 8000884:	81c2      	strh	r2, [r0, #14]
 8000886:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800088a:	6183      	str	r3, [r0, #24]
 800088c:	4619      	mov	r1, r3
 800088e:	2208      	movs	r2, #8
 8000890:	305c      	adds	r0, #92	; 0x5c
 8000892:	f7ff fe13 	bl	80004bc <memset>
 8000896:	4b05      	ldr	r3, [pc, #20]	; (80008ac <std+0x38>)
 8000898:	6224      	str	r4, [r4, #32]
 800089a:	6263      	str	r3, [r4, #36]	; 0x24
 800089c:	4b04      	ldr	r3, [pc, #16]	; (80008b0 <std+0x3c>)
 800089e:	62a3      	str	r3, [r4, #40]	; 0x28
 80008a0:	4b04      	ldr	r3, [pc, #16]	; (80008b4 <std+0x40>)
 80008a2:	62e3      	str	r3, [r4, #44]	; 0x2c
 80008a4:	4b04      	ldr	r3, [pc, #16]	; (80008b8 <std+0x44>)
 80008a6:	6323      	str	r3, [r4, #48]	; 0x30
 80008a8:	bd10      	pop	{r4, pc}
 80008aa:	bf00      	nop
 80008ac:	08000c3d 	.word	0x08000c3d
 80008b0:	08000c5f 	.word	0x08000c5f
 80008b4:	08000c97 	.word	0x08000c97
 80008b8:	08000cbb 	.word	0x08000cbb

080008bc <_cleanup_r>:
 80008bc:	4901      	ldr	r1, [pc, #4]	; (80008c4 <_cleanup_r+0x8>)
 80008be:	f000 b885 	b.w	80009cc <_fwalk_reent>
 80008c2:	bf00      	nop
 80008c4:	08000821 	.word	0x08000821

080008c8 <__sfmoreglue>:
 80008c8:	b570      	push	{r4, r5, r6, lr}
 80008ca:	2568      	movs	r5, #104	; 0x68
 80008cc:	1e4a      	subs	r2, r1, #1
 80008ce:	4355      	muls	r5, r2
 80008d0:	460e      	mov	r6, r1
 80008d2:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80008d6:	f000 f947 	bl	8000b68 <_malloc_r>
 80008da:	4604      	mov	r4, r0
 80008dc:	b140      	cbz	r0, 80008f0 <__sfmoreglue+0x28>
 80008de:	2100      	movs	r1, #0
 80008e0:	e9c0 1600 	strd	r1, r6, [r0]
 80008e4:	300c      	adds	r0, #12
 80008e6:	60a0      	str	r0, [r4, #8]
 80008e8:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80008ec:	f7ff fde6 	bl	80004bc <memset>
 80008f0:	4620      	mov	r0, r4
 80008f2:	bd70      	pop	{r4, r5, r6, pc}

080008f4 <__sinit>:
 80008f4:	6983      	ldr	r3, [r0, #24]
 80008f6:	b510      	push	{r4, lr}
 80008f8:	4604      	mov	r4, r0
 80008fa:	bb33      	cbnz	r3, 800094a <__sinit+0x56>
 80008fc:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 8000900:	6503      	str	r3, [r0, #80]	; 0x50
 8000902:	4b12      	ldr	r3, [pc, #72]	; (800094c <__sinit+0x58>)
 8000904:	4a12      	ldr	r2, [pc, #72]	; (8000950 <__sinit+0x5c>)
 8000906:	681b      	ldr	r3, [r3, #0]
 8000908:	6282      	str	r2, [r0, #40]	; 0x28
 800090a:	4298      	cmp	r0, r3
 800090c:	bf04      	itt	eq
 800090e:	2301      	moveq	r3, #1
 8000910:	6183      	streq	r3, [r0, #24]
 8000912:	f000 f81f 	bl	8000954 <__sfp>
 8000916:	6060      	str	r0, [r4, #4]
 8000918:	4620      	mov	r0, r4
 800091a:	f000 f81b 	bl	8000954 <__sfp>
 800091e:	60a0      	str	r0, [r4, #8]
 8000920:	4620      	mov	r0, r4
 8000922:	f000 f817 	bl	8000954 <__sfp>
 8000926:	2200      	movs	r2, #0
 8000928:	60e0      	str	r0, [r4, #12]
 800092a:	2104      	movs	r1, #4
 800092c:	6860      	ldr	r0, [r4, #4]
 800092e:	f7ff ffa1 	bl	8000874 <std>
 8000932:	2201      	movs	r2, #1
 8000934:	2109      	movs	r1, #9
 8000936:	68a0      	ldr	r0, [r4, #8]
 8000938:	f7ff ff9c 	bl	8000874 <std>
 800093c:	2202      	movs	r2, #2
 800093e:	2112      	movs	r1, #18
 8000940:	68e0      	ldr	r0, [r4, #12]
 8000942:	f7ff ff97 	bl	8000874 <std>
 8000946:	2301      	movs	r3, #1
 8000948:	61a3      	str	r3, [r4, #24]
 800094a:	bd10      	pop	{r4, pc}
 800094c:	08000dbc 	.word	0x08000dbc
 8000950:	080008bd 	.word	0x080008bd

08000954 <__sfp>:
 8000954:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000956:	4b1b      	ldr	r3, [pc, #108]	; (80009c4 <__sfp+0x70>)
 8000958:	4607      	mov	r7, r0
 800095a:	681e      	ldr	r6, [r3, #0]
 800095c:	69b3      	ldr	r3, [r6, #24]
 800095e:	b913      	cbnz	r3, 8000966 <__sfp+0x12>
 8000960:	4630      	mov	r0, r6
 8000962:	f7ff ffc7 	bl	80008f4 <__sinit>
 8000966:	3648      	adds	r6, #72	; 0x48
 8000968:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 800096c:	3b01      	subs	r3, #1
 800096e:	d503      	bpl.n	8000978 <__sfp+0x24>
 8000970:	6833      	ldr	r3, [r6, #0]
 8000972:	b133      	cbz	r3, 8000982 <__sfp+0x2e>
 8000974:	6836      	ldr	r6, [r6, #0]
 8000976:	e7f7      	b.n	8000968 <__sfp+0x14>
 8000978:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 800097c:	b16d      	cbz	r5, 800099a <__sfp+0x46>
 800097e:	3468      	adds	r4, #104	; 0x68
 8000980:	e7f4      	b.n	800096c <__sfp+0x18>
 8000982:	2104      	movs	r1, #4
 8000984:	4638      	mov	r0, r7
 8000986:	f7ff ff9f 	bl	80008c8 <__sfmoreglue>
 800098a:	6030      	str	r0, [r6, #0]
 800098c:	2800      	cmp	r0, #0
 800098e:	d1f1      	bne.n	8000974 <__sfp+0x20>
 8000990:	230c      	movs	r3, #12
 8000992:	4604      	mov	r4, r0
 8000994:	603b      	str	r3, [r7, #0]
 8000996:	4620      	mov	r0, r4
 8000998:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800099a:	4b0b      	ldr	r3, [pc, #44]	; (80009c8 <__sfp+0x74>)
 800099c:	6665      	str	r5, [r4, #100]	; 0x64
 800099e:	e9c4 5500 	strd	r5, r5, [r4]
 80009a2:	60a5      	str	r5, [r4, #8]
 80009a4:	e9c4 3503 	strd	r3, r5, [r4, #12]
 80009a8:	e9c4 5505 	strd	r5, r5, [r4, #20]
 80009ac:	2208      	movs	r2, #8
 80009ae:	4629      	mov	r1, r5
 80009b0:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80009b4:	f7ff fd82 	bl	80004bc <memset>
 80009b8:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80009bc:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80009c0:	e7e9      	b.n	8000996 <__sfp+0x42>
 80009c2:	bf00      	nop
 80009c4:	08000dbc 	.word	0x08000dbc
 80009c8:	ffff0001 	.word	0xffff0001

080009cc <_fwalk_reent>:
 80009cc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80009d0:	4680      	mov	r8, r0
 80009d2:	4689      	mov	r9, r1
 80009d4:	2600      	movs	r6, #0
 80009d6:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80009da:	b914      	cbnz	r4, 80009e2 <_fwalk_reent+0x16>
 80009dc:	4630      	mov	r0, r6
 80009de:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80009e2:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 80009e6:	3f01      	subs	r7, #1
 80009e8:	d501      	bpl.n	80009ee <_fwalk_reent+0x22>
 80009ea:	6824      	ldr	r4, [r4, #0]
 80009ec:	e7f5      	b.n	80009da <_fwalk_reent+0xe>
 80009ee:	89ab      	ldrh	r3, [r5, #12]
 80009f0:	2b01      	cmp	r3, #1
 80009f2:	d907      	bls.n	8000a04 <_fwalk_reent+0x38>
 80009f4:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80009f8:	3301      	adds	r3, #1
 80009fa:	d003      	beq.n	8000a04 <_fwalk_reent+0x38>
 80009fc:	4629      	mov	r1, r5
 80009fe:	4640      	mov	r0, r8
 8000a00:	47c8      	blx	r9
 8000a02:	4306      	orrs	r6, r0
 8000a04:	3568      	adds	r5, #104	; 0x68
 8000a06:	e7ee      	b.n	80009e6 <_fwalk_reent+0x1a>

08000a08 <__swhatbuf_r>:
 8000a08:	b570      	push	{r4, r5, r6, lr}
 8000a0a:	460e      	mov	r6, r1
 8000a0c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000a10:	b096      	sub	sp, #88	; 0x58
 8000a12:	2900      	cmp	r1, #0
 8000a14:	4614      	mov	r4, r2
 8000a16:	461d      	mov	r5, r3
 8000a18:	da07      	bge.n	8000a2a <__swhatbuf_r+0x22>
 8000a1a:	2300      	movs	r3, #0
 8000a1c:	602b      	str	r3, [r5, #0]
 8000a1e:	89b3      	ldrh	r3, [r6, #12]
 8000a20:	061a      	lsls	r2, r3, #24
 8000a22:	d410      	bmi.n	8000a46 <__swhatbuf_r+0x3e>
 8000a24:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000a28:	e00e      	b.n	8000a48 <__swhatbuf_r+0x40>
 8000a2a:	466a      	mov	r2, sp
 8000a2c:	f000 f96c 	bl	8000d08 <_fstat_r>
 8000a30:	2800      	cmp	r0, #0
 8000a32:	dbf2      	blt.n	8000a1a <__swhatbuf_r+0x12>
 8000a34:	9a01      	ldr	r2, [sp, #4]
 8000a36:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000a3a:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000a3e:	425a      	negs	r2, r3
 8000a40:	415a      	adcs	r2, r3
 8000a42:	602a      	str	r2, [r5, #0]
 8000a44:	e7ee      	b.n	8000a24 <__swhatbuf_r+0x1c>
 8000a46:	2340      	movs	r3, #64	; 0x40
 8000a48:	2000      	movs	r0, #0
 8000a4a:	6023      	str	r3, [r4, #0]
 8000a4c:	b016      	add	sp, #88	; 0x58
 8000a4e:	bd70      	pop	{r4, r5, r6, pc}

08000a50 <__smakebuf_r>:
 8000a50:	898b      	ldrh	r3, [r1, #12]
 8000a52:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000a54:	079d      	lsls	r5, r3, #30
 8000a56:	4606      	mov	r6, r0
 8000a58:	460c      	mov	r4, r1
 8000a5a:	d507      	bpl.n	8000a6c <__smakebuf_r+0x1c>
 8000a5c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000a60:	6023      	str	r3, [r4, #0]
 8000a62:	6123      	str	r3, [r4, #16]
 8000a64:	2301      	movs	r3, #1
 8000a66:	6163      	str	r3, [r4, #20]
 8000a68:	b002      	add	sp, #8
 8000a6a:	bd70      	pop	{r4, r5, r6, pc}
 8000a6c:	ab01      	add	r3, sp, #4
 8000a6e:	466a      	mov	r2, sp
 8000a70:	f7ff ffca 	bl	8000a08 <__swhatbuf_r>
 8000a74:	9900      	ldr	r1, [sp, #0]
 8000a76:	4605      	mov	r5, r0
 8000a78:	4630      	mov	r0, r6
 8000a7a:	f000 f875 	bl	8000b68 <_malloc_r>
 8000a7e:	b948      	cbnz	r0, 8000a94 <__smakebuf_r+0x44>
 8000a80:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000a84:	059a      	lsls	r2, r3, #22
 8000a86:	d4ef      	bmi.n	8000a68 <__smakebuf_r+0x18>
 8000a88:	f023 0303 	bic.w	r3, r3, #3
 8000a8c:	f043 0302 	orr.w	r3, r3, #2
 8000a90:	81a3      	strh	r3, [r4, #12]
 8000a92:	e7e3      	b.n	8000a5c <__smakebuf_r+0xc>
 8000a94:	4b0d      	ldr	r3, [pc, #52]	; (8000acc <__smakebuf_r+0x7c>)
 8000a96:	62b3      	str	r3, [r6, #40]	; 0x28
 8000a98:	89a3      	ldrh	r3, [r4, #12]
 8000a9a:	6020      	str	r0, [r4, #0]
 8000a9c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000aa0:	81a3      	strh	r3, [r4, #12]
 8000aa2:	9b00      	ldr	r3, [sp, #0]
 8000aa4:	6120      	str	r0, [r4, #16]
 8000aa6:	6163      	str	r3, [r4, #20]
 8000aa8:	9b01      	ldr	r3, [sp, #4]
 8000aaa:	b15b      	cbz	r3, 8000ac4 <__smakebuf_r+0x74>
 8000aac:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000ab0:	4630      	mov	r0, r6
 8000ab2:	f000 f93b 	bl	8000d2c <_isatty_r>
 8000ab6:	b128      	cbz	r0, 8000ac4 <__smakebuf_r+0x74>
 8000ab8:	89a3      	ldrh	r3, [r4, #12]
 8000aba:	f023 0303 	bic.w	r3, r3, #3
 8000abe:	f043 0301 	orr.w	r3, r3, #1
 8000ac2:	81a3      	strh	r3, [r4, #12]
 8000ac4:	89a3      	ldrh	r3, [r4, #12]
 8000ac6:	431d      	orrs	r5, r3
 8000ac8:	81a5      	strh	r5, [r4, #12]
 8000aca:	e7cd      	b.n	8000a68 <__smakebuf_r+0x18>
 8000acc:	080008bd 	.word	0x080008bd

08000ad0 <_free_r>:
 8000ad0:	b538      	push	{r3, r4, r5, lr}
 8000ad2:	4605      	mov	r5, r0
 8000ad4:	2900      	cmp	r1, #0
 8000ad6:	d043      	beq.n	8000b60 <_free_r+0x90>
 8000ad8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000adc:	1f0c      	subs	r4, r1, #4
 8000ade:	2b00      	cmp	r3, #0
 8000ae0:	bfb8      	it	lt
 8000ae2:	18e4      	addlt	r4, r4, r3
 8000ae4:	f000 f944 	bl	8000d70 <__malloc_lock>
 8000ae8:	4a1e      	ldr	r2, [pc, #120]	; (8000b64 <_free_r+0x94>)
 8000aea:	6813      	ldr	r3, [r2, #0]
 8000aec:	4610      	mov	r0, r2
 8000aee:	b933      	cbnz	r3, 8000afe <_free_r+0x2e>
 8000af0:	6063      	str	r3, [r4, #4]
 8000af2:	6014      	str	r4, [r2, #0]
 8000af4:	4628      	mov	r0, r5
 8000af6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000afa:	f000 b93a 	b.w	8000d72 <__malloc_unlock>
 8000afe:	42a3      	cmp	r3, r4
 8000b00:	d90b      	bls.n	8000b1a <_free_r+0x4a>
 8000b02:	6821      	ldr	r1, [r4, #0]
 8000b04:	1862      	adds	r2, r4, r1
 8000b06:	4293      	cmp	r3, r2
 8000b08:	bf01      	itttt	eq
 8000b0a:	681a      	ldreq	r2, [r3, #0]
 8000b0c:	685b      	ldreq	r3, [r3, #4]
 8000b0e:	1852      	addeq	r2, r2, r1
 8000b10:	6022      	streq	r2, [r4, #0]
 8000b12:	6063      	str	r3, [r4, #4]
 8000b14:	6004      	str	r4, [r0, #0]
 8000b16:	e7ed      	b.n	8000af4 <_free_r+0x24>
 8000b18:	4613      	mov	r3, r2
 8000b1a:	685a      	ldr	r2, [r3, #4]
 8000b1c:	b10a      	cbz	r2, 8000b22 <_free_r+0x52>
 8000b1e:	42a2      	cmp	r2, r4
 8000b20:	d9fa      	bls.n	8000b18 <_free_r+0x48>
 8000b22:	6819      	ldr	r1, [r3, #0]
 8000b24:	1858      	adds	r0, r3, r1
 8000b26:	42a0      	cmp	r0, r4
 8000b28:	d10b      	bne.n	8000b42 <_free_r+0x72>
 8000b2a:	6820      	ldr	r0, [r4, #0]
 8000b2c:	4401      	add	r1, r0
 8000b2e:	1858      	adds	r0, r3, r1
 8000b30:	4282      	cmp	r2, r0
 8000b32:	6019      	str	r1, [r3, #0]
 8000b34:	d1de      	bne.n	8000af4 <_free_r+0x24>
 8000b36:	6810      	ldr	r0, [r2, #0]
 8000b38:	6852      	ldr	r2, [r2, #4]
 8000b3a:	4401      	add	r1, r0
 8000b3c:	6019      	str	r1, [r3, #0]
 8000b3e:	605a      	str	r2, [r3, #4]
 8000b40:	e7d8      	b.n	8000af4 <_free_r+0x24>
 8000b42:	d902      	bls.n	8000b4a <_free_r+0x7a>
 8000b44:	230c      	movs	r3, #12
 8000b46:	602b      	str	r3, [r5, #0]
 8000b48:	e7d4      	b.n	8000af4 <_free_r+0x24>
 8000b4a:	6820      	ldr	r0, [r4, #0]
 8000b4c:	1821      	adds	r1, r4, r0
 8000b4e:	428a      	cmp	r2, r1
 8000b50:	bf01      	itttt	eq
 8000b52:	6811      	ldreq	r1, [r2, #0]
 8000b54:	6852      	ldreq	r2, [r2, #4]
 8000b56:	1809      	addeq	r1, r1, r0
 8000b58:	6021      	streq	r1, [r4, #0]
 8000b5a:	6062      	str	r2, [r4, #4]
 8000b5c:	605c      	str	r4, [r3, #4]
 8000b5e:	e7c9      	b.n	8000af4 <_free_r+0x24>
 8000b60:	bd38      	pop	{r3, r4, r5, pc}
 8000b62:	bf00      	nop
 8000b64:	20000084 	.word	0x20000084

08000b68 <_malloc_r>:
 8000b68:	b570      	push	{r4, r5, r6, lr}
 8000b6a:	1ccd      	adds	r5, r1, #3
 8000b6c:	f025 0503 	bic.w	r5, r5, #3
 8000b70:	3508      	adds	r5, #8
 8000b72:	2d0c      	cmp	r5, #12
 8000b74:	bf38      	it	cc
 8000b76:	250c      	movcc	r5, #12
 8000b78:	2d00      	cmp	r5, #0
 8000b7a:	4606      	mov	r6, r0
 8000b7c:	db01      	blt.n	8000b82 <_malloc_r+0x1a>
 8000b7e:	42a9      	cmp	r1, r5
 8000b80:	d903      	bls.n	8000b8a <_malloc_r+0x22>
 8000b82:	230c      	movs	r3, #12
 8000b84:	6033      	str	r3, [r6, #0]
 8000b86:	2000      	movs	r0, #0
 8000b88:	bd70      	pop	{r4, r5, r6, pc}
 8000b8a:	f000 f8f1 	bl	8000d70 <__malloc_lock>
 8000b8e:	4a21      	ldr	r2, [pc, #132]	; (8000c14 <_malloc_r+0xac>)
 8000b90:	6814      	ldr	r4, [r2, #0]
 8000b92:	4621      	mov	r1, r4
 8000b94:	b991      	cbnz	r1, 8000bbc <_malloc_r+0x54>
 8000b96:	4c20      	ldr	r4, [pc, #128]	; (8000c18 <_malloc_r+0xb0>)
 8000b98:	6823      	ldr	r3, [r4, #0]
 8000b9a:	b91b      	cbnz	r3, 8000ba4 <_malloc_r+0x3c>
 8000b9c:	4630      	mov	r0, r6
 8000b9e:	f000 f83d 	bl	8000c1c <_sbrk_r>
 8000ba2:	6020      	str	r0, [r4, #0]
 8000ba4:	4629      	mov	r1, r5
 8000ba6:	4630      	mov	r0, r6
 8000ba8:	f000 f838 	bl	8000c1c <_sbrk_r>
 8000bac:	1c43      	adds	r3, r0, #1
 8000bae:	d124      	bne.n	8000bfa <_malloc_r+0x92>
 8000bb0:	230c      	movs	r3, #12
 8000bb2:	4630      	mov	r0, r6
 8000bb4:	6033      	str	r3, [r6, #0]
 8000bb6:	f000 f8dc 	bl	8000d72 <__malloc_unlock>
 8000bba:	e7e4      	b.n	8000b86 <_malloc_r+0x1e>
 8000bbc:	680b      	ldr	r3, [r1, #0]
 8000bbe:	1b5b      	subs	r3, r3, r5
 8000bc0:	d418      	bmi.n	8000bf4 <_malloc_r+0x8c>
 8000bc2:	2b0b      	cmp	r3, #11
 8000bc4:	d90f      	bls.n	8000be6 <_malloc_r+0x7e>
 8000bc6:	600b      	str	r3, [r1, #0]
 8000bc8:	18cc      	adds	r4, r1, r3
 8000bca:	50cd      	str	r5, [r1, r3]
 8000bcc:	4630      	mov	r0, r6
 8000bce:	f000 f8d0 	bl	8000d72 <__malloc_unlock>
 8000bd2:	f104 000b 	add.w	r0, r4, #11
 8000bd6:	1d23      	adds	r3, r4, #4
 8000bd8:	f020 0007 	bic.w	r0, r0, #7
 8000bdc:	1ac3      	subs	r3, r0, r3
 8000bde:	d0d3      	beq.n	8000b88 <_malloc_r+0x20>
 8000be0:	425a      	negs	r2, r3
 8000be2:	50e2      	str	r2, [r4, r3]
 8000be4:	e7d0      	b.n	8000b88 <_malloc_r+0x20>
 8000be6:	684b      	ldr	r3, [r1, #4]
 8000be8:	428c      	cmp	r4, r1
 8000bea:	bf16      	itet	ne
 8000bec:	6063      	strne	r3, [r4, #4]
 8000bee:	6013      	streq	r3, [r2, #0]
 8000bf0:	460c      	movne	r4, r1
 8000bf2:	e7eb      	b.n	8000bcc <_malloc_r+0x64>
 8000bf4:	460c      	mov	r4, r1
 8000bf6:	6849      	ldr	r1, [r1, #4]
 8000bf8:	e7cc      	b.n	8000b94 <_malloc_r+0x2c>
 8000bfa:	1cc4      	adds	r4, r0, #3
 8000bfc:	f024 0403 	bic.w	r4, r4, #3
 8000c00:	42a0      	cmp	r0, r4
 8000c02:	d005      	beq.n	8000c10 <_malloc_r+0xa8>
 8000c04:	1a21      	subs	r1, r4, r0
 8000c06:	4630      	mov	r0, r6
 8000c08:	f000 f808 	bl	8000c1c <_sbrk_r>
 8000c0c:	3001      	adds	r0, #1
 8000c0e:	d0cf      	beq.n	8000bb0 <_malloc_r+0x48>
 8000c10:	6025      	str	r5, [r4, #0]
 8000c12:	e7db      	b.n	8000bcc <_malloc_r+0x64>
 8000c14:	20000084 	.word	0x20000084
 8000c18:	20000088 	.word	0x20000088

08000c1c <_sbrk_r>:
 8000c1c:	b538      	push	{r3, r4, r5, lr}
 8000c1e:	2300      	movs	r3, #0
 8000c20:	4c05      	ldr	r4, [pc, #20]	; (8000c38 <_sbrk_r+0x1c>)
 8000c22:	4605      	mov	r5, r0
 8000c24:	4608      	mov	r0, r1
 8000c26:	6023      	str	r3, [r4, #0]
 8000c28:	f7ff fbbe 	bl	80003a8 <_sbrk>
 8000c2c:	1c43      	adds	r3, r0, #1
 8000c2e:	d102      	bne.n	8000c36 <_sbrk_r+0x1a>
 8000c30:	6823      	ldr	r3, [r4, #0]
 8000c32:	b103      	cbz	r3, 8000c36 <_sbrk_r+0x1a>
 8000c34:	602b      	str	r3, [r5, #0]
 8000c36:	bd38      	pop	{r3, r4, r5, pc}
 8000c38:	2000008c 	.word	0x2000008c

08000c3c <__sread>:
 8000c3c:	b510      	push	{r4, lr}
 8000c3e:	460c      	mov	r4, r1
 8000c40:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c44:	f000 f896 	bl	8000d74 <_read_r>
 8000c48:	2800      	cmp	r0, #0
 8000c4a:	bfab      	itete	ge
 8000c4c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000c4e:	89a3      	ldrhlt	r3, [r4, #12]
 8000c50:	181b      	addge	r3, r3, r0
 8000c52:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000c56:	bfac      	ite	ge
 8000c58:	6563      	strge	r3, [r4, #84]	; 0x54
 8000c5a:	81a3      	strhlt	r3, [r4, #12]
 8000c5c:	bd10      	pop	{r4, pc}

08000c5e <__swrite>:
 8000c5e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000c62:	461f      	mov	r7, r3
 8000c64:	898b      	ldrh	r3, [r1, #12]
 8000c66:	4605      	mov	r5, r0
 8000c68:	05db      	lsls	r3, r3, #23
 8000c6a:	460c      	mov	r4, r1
 8000c6c:	4616      	mov	r6, r2
 8000c6e:	d505      	bpl.n	8000c7c <__swrite+0x1e>
 8000c70:	2302      	movs	r3, #2
 8000c72:	2200      	movs	r2, #0
 8000c74:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c78:	f000 f868 	bl	8000d4c <_lseek_r>
 8000c7c:	89a3      	ldrh	r3, [r4, #12]
 8000c7e:	4632      	mov	r2, r6
 8000c80:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000c84:	81a3      	strh	r3, [r4, #12]
 8000c86:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000c8a:	463b      	mov	r3, r7
 8000c8c:	4628      	mov	r0, r5
 8000c8e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000c92:	f000 b817 	b.w	8000cc4 <_write_r>

08000c96 <__sseek>:
 8000c96:	b510      	push	{r4, lr}
 8000c98:	460c      	mov	r4, r1
 8000c9a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c9e:	f000 f855 	bl	8000d4c <_lseek_r>
 8000ca2:	1c43      	adds	r3, r0, #1
 8000ca4:	89a3      	ldrh	r3, [r4, #12]
 8000ca6:	bf15      	itete	ne
 8000ca8:	6560      	strne	r0, [r4, #84]	; 0x54
 8000caa:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000cae:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000cb2:	81a3      	strheq	r3, [r4, #12]
 8000cb4:	bf18      	it	ne
 8000cb6:	81a3      	strhne	r3, [r4, #12]
 8000cb8:	bd10      	pop	{r4, pc}

08000cba <__sclose>:
 8000cba:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000cbe:	f000 b813 	b.w	8000ce8 <_close_r>
	...

08000cc4 <_write_r>:
 8000cc4:	b538      	push	{r3, r4, r5, lr}
 8000cc6:	4605      	mov	r5, r0
 8000cc8:	4608      	mov	r0, r1
 8000cca:	4611      	mov	r1, r2
 8000ccc:	2200      	movs	r2, #0
 8000cce:	4c05      	ldr	r4, [pc, #20]	; (8000ce4 <_write_r+0x20>)
 8000cd0:	6022      	str	r2, [r4, #0]
 8000cd2:	461a      	mov	r2, r3
 8000cd4:	f7ff fb1b 	bl	800030e <_write>
 8000cd8:	1c43      	adds	r3, r0, #1
 8000cda:	d102      	bne.n	8000ce2 <_write_r+0x1e>
 8000cdc:	6823      	ldr	r3, [r4, #0]
 8000cde:	b103      	cbz	r3, 8000ce2 <_write_r+0x1e>
 8000ce0:	602b      	str	r3, [r5, #0]
 8000ce2:	bd38      	pop	{r3, r4, r5, pc}
 8000ce4:	2000008c 	.word	0x2000008c

08000ce8 <_close_r>:
 8000ce8:	b538      	push	{r3, r4, r5, lr}
 8000cea:	2300      	movs	r3, #0
 8000cec:	4c05      	ldr	r4, [pc, #20]	; (8000d04 <_close_r+0x1c>)
 8000cee:	4605      	mov	r5, r0
 8000cf0:	4608      	mov	r0, r1
 8000cf2:	6023      	str	r3, [r4, #0]
 8000cf4:	f7ff fb27 	bl	8000346 <_close>
 8000cf8:	1c43      	adds	r3, r0, #1
 8000cfa:	d102      	bne.n	8000d02 <_close_r+0x1a>
 8000cfc:	6823      	ldr	r3, [r4, #0]
 8000cfe:	b103      	cbz	r3, 8000d02 <_close_r+0x1a>
 8000d00:	602b      	str	r3, [r5, #0]
 8000d02:	bd38      	pop	{r3, r4, r5, pc}
 8000d04:	2000008c 	.word	0x2000008c

08000d08 <_fstat_r>:
 8000d08:	b538      	push	{r3, r4, r5, lr}
 8000d0a:	2300      	movs	r3, #0
 8000d0c:	4c06      	ldr	r4, [pc, #24]	; (8000d28 <_fstat_r+0x20>)
 8000d0e:	4605      	mov	r5, r0
 8000d10:	4608      	mov	r0, r1
 8000d12:	4611      	mov	r1, r2
 8000d14:	6023      	str	r3, [r4, #0]
 8000d16:	f7ff fb21 	bl	800035c <_fstat>
 8000d1a:	1c43      	adds	r3, r0, #1
 8000d1c:	d102      	bne.n	8000d24 <_fstat_r+0x1c>
 8000d1e:	6823      	ldr	r3, [r4, #0]
 8000d20:	b103      	cbz	r3, 8000d24 <_fstat_r+0x1c>
 8000d22:	602b      	str	r3, [r5, #0]
 8000d24:	bd38      	pop	{r3, r4, r5, pc}
 8000d26:	bf00      	nop
 8000d28:	2000008c 	.word	0x2000008c

08000d2c <_isatty_r>:
 8000d2c:	b538      	push	{r3, r4, r5, lr}
 8000d2e:	2300      	movs	r3, #0
 8000d30:	4c05      	ldr	r4, [pc, #20]	; (8000d48 <_isatty_r+0x1c>)
 8000d32:	4605      	mov	r5, r0
 8000d34:	4608      	mov	r0, r1
 8000d36:	6023      	str	r3, [r4, #0]
 8000d38:	f7ff fb1f 	bl	800037a <_isatty>
 8000d3c:	1c43      	adds	r3, r0, #1
 8000d3e:	d102      	bne.n	8000d46 <_isatty_r+0x1a>
 8000d40:	6823      	ldr	r3, [r4, #0]
 8000d42:	b103      	cbz	r3, 8000d46 <_isatty_r+0x1a>
 8000d44:	602b      	str	r3, [r5, #0]
 8000d46:	bd38      	pop	{r3, r4, r5, pc}
 8000d48:	2000008c 	.word	0x2000008c

08000d4c <_lseek_r>:
 8000d4c:	b538      	push	{r3, r4, r5, lr}
 8000d4e:	4605      	mov	r5, r0
 8000d50:	4608      	mov	r0, r1
 8000d52:	4611      	mov	r1, r2
 8000d54:	2200      	movs	r2, #0
 8000d56:	4c05      	ldr	r4, [pc, #20]	; (8000d6c <_lseek_r+0x20>)
 8000d58:	6022      	str	r2, [r4, #0]
 8000d5a:	461a      	mov	r2, r3
 8000d5c:	f7ff fb17 	bl	800038e <_lseek>
 8000d60:	1c43      	adds	r3, r0, #1
 8000d62:	d102      	bne.n	8000d6a <_lseek_r+0x1e>
 8000d64:	6823      	ldr	r3, [r4, #0]
 8000d66:	b103      	cbz	r3, 8000d6a <_lseek_r+0x1e>
 8000d68:	602b      	str	r3, [r5, #0]
 8000d6a:	bd38      	pop	{r3, r4, r5, pc}
 8000d6c:	2000008c 	.word	0x2000008c

08000d70 <__malloc_lock>:
 8000d70:	4770      	bx	lr

08000d72 <__malloc_unlock>:
 8000d72:	4770      	bx	lr

08000d74 <_read_r>:
 8000d74:	b538      	push	{r3, r4, r5, lr}
 8000d76:	4605      	mov	r5, r0
 8000d78:	4608      	mov	r0, r1
 8000d7a:	4611      	mov	r1, r2
 8000d7c:	2200      	movs	r2, #0
 8000d7e:	4c05      	ldr	r4, [pc, #20]	; (8000d94 <_read_r+0x20>)
 8000d80:	6022      	str	r2, [r4, #0]
 8000d82:	461a      	mov	r2, r3
 8000d84:	f7ff faa6 	bl	80002d4 <_read>
 8000d88:	1c43      	adds	r3, r0, #1
 8000d8a:	d102      	bne.n	8000d92 <_read_r+0x1e>
 8000d8c:	6823      	ldr	r3, [r4, #0]
 8000d8e:	b103      	cbz	r3, 8000d92 <_read_r+0x1e>
 8000d90:	602b      	str	r3, [r5, #0]
 8000d92:	bd38      	pop	{r3, r4, r5, pc}
 8000d94:	2000008c 	.word	0x2000008c

08000d98 <_init>:
 8000d98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d9a:	bf00      	nop
 8000d9c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000d9e:	bc08      	pop	{r3}
 8000da0:	469e      	mov	lr, r3
 8000da2:	4770      	bx	lr

08000da4 <_fini>:
 8000da4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000da6:	bf00      	nop
 8000da8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000daa:	bc08      	pop	{r3}
 8000dac:	469e      	mov	lr, r3
 8000dae:	4770      	bx	lr
